# Docker Compose for Clean MCP Server Stack
# NO Windows dependencies - Pure Linux containers

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: mcp_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: --encoding=UTF-8 --locale=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - mcp_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - mcp_network

  # MCP Server
  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    environment:
      # Server configuration
      MCP_PORT: 3001
      MCP_HOST: 0.0.0.0
      MCP_AUTH_TYPE: jwt
      MCP_JWT_SECRET: your-secret-key-change-in-production
      
      # Database connections (using service names)
      DATABASE_URL: postgresql://postgres:password@postgres:5432/mcp_db
      REDIS_URL: redis://redis:6379/0
      
      # Optional AI services
      # OPENAI_API_KEY: your-openai-key
      
      # Performance tuning
      MCP_MAX_CONCURRENT: 100
      MCP_REQUEST_TIMEOUT: 30
      MCP_RATE_LIMIT: 1000
      
      # Features
      MCP_ENABLE_CACHE: "true"
      MCP_ENABLE_METRICS: "true"
      MCP_ENABLE_WEBSOCKET: "true"
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - mcp_network
    # Resource limits for production
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

# Volumes for data persistence
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

# Network for service communication
networks:
  mcp_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16