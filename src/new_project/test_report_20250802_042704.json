{
  "execution_summary": {
    "start_time": 1754080014.2012181,
    "total_execution_time": 10.699203968048096,
    "total_tests_run": 0,
    "total_tests_passed": 0,
    "total_tests_failed": 0,
    "success_rate": 0.0
  },
  "test_results": {
    "environment": {
      "python_available": true,
      "pytest_available": true,
      "docker_available": false,
      "kailash_sdk_available": true,
      "test_dependencies": [],
      "missing_dependencies": [
        "docker"
      ],
      "docker_services": {}
    },
    "compliance": {
      "status": "failed",
      "checks_performed": [
        "Test file exists: tests/unit/test_sdk_compliance_foundation.py",
        "Test file exists: tests/integration/test_sdk_compliance_integration.py",
        "Test file exists: tests/e2e/test_sdk_compliance_e2e.py",
        "Config file exists: pytest.ini",
        "Test class found: TestRegisterNodeDecorator",
        "Test class found: TestSecureGovernedNode",
        "Test class found: TestNodeExecutionPatterns",
        "Test class found: TestStringBasedNodeConfigurations"
      ],
      "violations_found": [
        "Missing config file: conftest.py"
      ],
      "compliance_score": 90
    },
    "unit": {
      "tier": "unit",
      "description": "Unit tests (Tier 1)",
      "status": "failed",
      "return_code": 1,
      "execution_time": 7.039808511734009,
      "output": "\u001b[1m============================= test session starts =============================\u001b[0m\nplatform win32 -- Python 3.11.9, pytest-8.4.1, pluggy-1.6.0 -- C:\\Users\\fujif\\OneDrive\\Documents\\GitHub\\horme-pov\\venv\\Scripts\\python.exe\ncachedir: .pytest_cache\nrootdir: C:\\Users\\fujif\\OneDrive\\Documents\\GitHub\\horme-pov\\src\\new_project\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, asyncio-1.1.0, cov-6.2.1, forked-1.6.0, split-0.10.0, timeout-2.4.0, xdist-3.8.0\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ntimeout: 10.0s\ntimeout method: thread\ntimeout func_only: False\n\u001b[1mcollecting ... \u001b[0mcollected 21 items\n\nsrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py::TestRegisterNodeDecorator::test_register_node_decorator_follows_sdk_standards \u001b[32mPASSED\u001b[0m\u001b[32m [  4%]\u001b[0m\nsrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py::TestRegisterNodeDecorator::test_register_node_works_with_minimal_parameters \u001b[32mPASSED\u001b[0m\u001b[32m [  9%]\u001b[0m\nsrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py::TestRegisterNodeDecorator::test_register_node_supports_standard_sdk_patterns \u001b[31mFAILED\u001b[0m\u001b[31m [ 14%]\u001b[0m\nsrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py::TestRegisterNodeDecorator::test_register_node_allows_multiple_registrations \u001b[32mPASSED\u001b[0m\u001b[31m [ 19%]\u001b[0m\nsrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py::TestSecureGovernedNode::test_secure_governed_node_parameter_validation \u001b[32mPASSED\u001b[0m\u001b[31m [ 23%]\u001b[0m\nsrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py::TestSecureGovernedNode::test_secure_governed_node_rejects_invalid_parameters \u001b[32mPASSED\u001b[0m\u001b[31m [ 28%]\u001b[0m\nsrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py::TestSecureGovernedNode::test_secure_governed_node_sanitizes_sensitive_data \u001b[32mPASSED\u001b[0m\u001b[31m [ 33%]\u001b[0m\nsrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py::TestSecureGovernedNode::test_secure_governed_node_audit_logging \u001b[32mPASSED\u001b[0m\u001b[31m [ 38%]\u001b[0m\nsrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py::TestNodeExecutionPatterns::test_node_implements_run_as_primary_interface \u001b[31mFAILED\u001b[0m\u001b[31m [ 42%]\u001b[0m\nsrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py::TestNodeExecutionPatterns::test_workflow_uses_runtime_execute_pattern \u001b[32mPASSED\u001b[0m\u001b[31m [ 47%]\u001b[0m\nsrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py::TestNodeExecutionPatterns::test_workflow_build_method_called_before_execution \u001b[31mFAILED\u001b[0m\u001b[31m [ 52%]\u001b[0m\nsrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py::TestStringBasedNodeConfigurations::test_workflow_uses_string_node_references \u001b[31mFAILED\u001b[0m\u001b[31m [ 57%]\u001b[0m\nsrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py::TestStringBasedNodeConfigurations::test_workflow_rejects_object_based_node_instantiation \u001b[31mFAILED\u001b[0m\u001b[31m [ 61%]\u001b[0m\nsrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py::TestStringBasedNodeConfigurations::test_workflow_parameter_injection_patterns \u001b[31mFAILED\u001b[0m\u001b[31m [ 66%]\u001b[0m\nsrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py::TestParameterValidation::test_parameter_validator_enforces_types \u001b[32mPASSED\u001b[0m\u001b[31m [ 71%]\u001b[0m\nsrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py::TestParameterValidation::test_parameter_validator_handles_required_fields \u001b[32mPASSED\u001b[0m\u001b[31m [ 76%]\u001b[0m\nsrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py::TestParameterValidation::test_parameter_validator_connection_types \u001b[32mPASSED\u001b[0m\u001b[31m [ 80%]\u001b[0m\nsrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py::TestComplianceIntegration::test_end_to_end_compliant_workflow \u001b[32mPASSED\u001b[0m\u001b[31m [ 85%]\u001b[0m\nsrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py::TestComplianceIntegration::test_compliance_violation_detection \u001b[31mFAILED\u001b[0m\u001b[31m [ 90%]\u001b[0m\nsrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py::TestCompliancePerformance::test_node_registration_performance \u001b[32mPASSED\u001b[0m\u001b[31m [ 95%]\u001b[0m\nsrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py::TestCompliancePerformance::test_parameter_validation_performance \u001b[32mPASSED\u001b[0m\u001b[31m [100%]\u001b[0m\n\n================================== FAILURES ===================================\n\u001b[31m\u001b[1m_ TestRegisterNodeDecorator.test_register_node_supports_standard_sdk_patterns _\u001b[0m\n\u001b[1m\u001b[31msrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py\u001b[0m:132: in test_register_node_supports_standard_sdk_patterns\n    \u001b[0m\u001b[37m@register_node\u001b[39;49;00m(**pattern)\u001b[90m\u001b[39;49;00m\n     ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   TypeError: register_node() got an unexpected keyword argument 'tags'\u001b[0m\n------------------------------ Captured log call ------------------------------\n\u001b[33mWARNING \u001b[0m root:base.py:2030 Overwriting existing node registration for 'TestNode'\n\u001b[31m\u001b[1m___ TestNodeExecutionPatterns.test_node_implements_run_as_primary_interface ___\u001b[0m\n\u001b[1m\u001b[31mvenv\\Lib\\site-packages\\kailash\\nodes\\base.py\u001b[0m:291: in __init__\n    \u001b[0m\u001b[96mself\u001b[39;49;00m._validate_config()\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mvenv\\Lib\\site-packages\\kailash\\nodes\\base.py\u001b[0m:547: in _validate_config\n    \u001b[0m\u001b[94mif\u001b[39;49;00m param_def.required \u001b[95mand\u001b[39;49;00m param_def.default \u001b[95mis\u001b[39;49;00m \u001b[94mNone\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n       ^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AttributeError: 'dict' object has no attribute 'required'\u001b[0m\n\n\u001b[33mThe above exception was the direct cause of the following exception:\u001b[0m\n\u001b[1m\u001b[31msrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py\u001b[0m:301: in test_node_implements_run_as_primary_interface\n    \u001b[0mnode = TestNode()\u001b[90m\u001b[39;49;00m\n           ^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mvenv\\Lib\\site-packages\\kailash\\nodes\\base.py\u001b[0m:295: in __init__\n    \u001b[0m\u001b[94mraise\u001b[39;49;00m NodeConfigurationError(\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   kailash.sdk_exceptions.NodeConfigurationError: Failed to initialize node 'TestNode': 'dict' object has no attribute 'required'\u001b[0m\n------------------------------ Captured log call ------------------------------\n\u001b[33mWARNING \u001b[0m root:base.py:2030 Overwriting existing node registration for 'TestNode'\n\u001b[31m\u001b[1m_ TestNodeExecutionPatterns.test_workflow_build_method_called_before_execution _\u001b[0m\n\u001b[1m\u001b[31msrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py\u001b[0m:338: in get_parameters\n    \u001b[0m\u001b[94mreturn\u001b[39;49;00m {\u001b[33m\"\u001b[39;49;00m\u001b[33mtest_param\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m: NodeParameter(\u001b[96mtype\u001b[39;49;00m=\u001b[96mstr\u001b[39;49;00m, required=\u001b[94mFalse\u001b[39;49;00m)}\u001b[90m\u001b[39;49;00m\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   pydantic_core._pydantic_core.ValidationError: 1 validation error for NodeParameter\u001b[0m\n\u001b[1m\u001b[31mE   name\u001b[0m\n\u001b[1m\u001b[31mE     Field required [type=missing, input_value={'type': <class 'str'>, 'required': False}, input_type=dict]\u001b[0m\n\u001b[1m\u001b[31mE       For further information visit https://errors.pydantic.dev/2.11/v/missing\u001b[0m\n\n\u001b[33mThe above exception was the direct cause of the following exception:\u001b[0m\n\u001b[1m\u001b[31mvenv\\Lib\\site-packages\\kailash\\nodes\\base.py\u001b[0m:291: in __init__\n    \u001b[0m\u001b[96mself\u001b[39;49;00m._validate_config()\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mvenv\\Lib\\site-packages\\kailash\\nodes\\base.py\u001b[0m:543: in _validate_config\n    \u001b[0m\u001b[94mraise\u001b[39;49;00m NodeConfigurationError(\u001b[33mf\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[33mFailed to get node parameters: \u001b[39;49;00m\u001b[33m{\u001b[39;49;00me\u001b[33m}\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m) \u001b[94mfrom\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[04m\u001b[96me\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   kailash.sdk_exceptions.NodeConfigurationError: Failed to get node parameters: 1 validation error for NodeParameter\u001b[0m\n\u001b[1m\u001b[31mE   name\u001b[0m\n\u001b[1m\u001b[31mE     Field required [type=missing, input_value={'type': <class 'str'>, 'required': False}, input_type=dict]\u001b[0m\n\u001b[1m\u001b[31mE       For further information visit https://errors.pydantic.dev/2.11/v/missing\u001b[0m\n\n\u001b[33mThe above exception was the direct cause of the following exception:\u001b[0m\n\u001b[1m\u001b[31mvenv\\Lib\\site-packages\\kailash\\workflow\\builder.py\u001b[0m:1055: in build\n    \u001b[0mworkflow.add_node(\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mvenv\\Lib\\site-packages\\kailash\\workflow\\graph.py\u001b[0m:220: in add_node\n    \u001b[0mnode_instance = \u001b[96mself\u001b[39;49;00m._create_node_instance(node_class, node_id, config)\u001b[90m\u001b[39;49;00m\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mvenv\\Lib\\site-packages\\kailash\\workflow\\graph.py\u001b[0m:169: in _create_node_instance\n    \u001b[0m\u001b[94mreturn\u001b[39;49;00m node_class(\u001b[96mid\u001b[39;49;00m=node_id, **config)\u001b[90m\u001b[39;49;00m\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mvenv\\Lib\\site-packages\\kailash\\nodes\\base.py\u001b[0m:295: in __init__\n    \u001b[0m\u001b[94mraise\u001b[39;49;00m NodeConfigurationError(\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   kailash.sdk_exceptions.NodeConfigurationError: Failed to initialize node 'test_query': Failed to get node parameters: 1 validation error for NodeParameter\u001b[0m\n\u001b[1m\u001b[31mE   name\u001b[0m\n\u001b[1m\u001b[31mE     Field required [type=missing, input_value={'type': <class 'str'>, 'required': False}, input_type=dict]\u001b[0m\n\u001b[1m\u001b[31mE       For further information visit https://errors.pydantic.dev/2.11/v/missing\u001b[0m\n\n\u001b[33mThe above exception was the direct cause of the following exception:\u001b[0m\n\u001b[1m\u001b[31msrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py\u001b[0m:348: in test_workflow_build_method_called_before_execution\n    \u001b[0mbuilt_workflow = workflow.build()\u001b[90m\u001b[39;49;00m\n                     ^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mvenv\\Lib\\site-packages\\kailash\\workflow\\builder.py\u001b[0m:1059: in build\n    \u001b[0m\u001b[94mraise\u001b[39;49;00m WorkflowValidationError(\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   kailash.sdk_exceptions.WorkflowValidationError: Failed to add node 'test_query' to workflow: Failed to initialize node 'test_query': Failed to get node parameters: 1 validation error for NodeParameter\u001b[0m\n\u001b[1m\u001b[31mE   name\u001b[0m\n\u001b[1m\u001b[31mE     Field required [type=missing, input_value={'type': <class 'str'>, 'required': False}, input_type=dict]\u001b[0m\n\u001b[1m\u001b[31mE       For further information visit https://errors.pydantic.dev/2.11/v/missing\u001b[0m\n------------------------------ Captured log call ------------------------------\n\u001b[33mWARNING \u001b[0m root:base.py:2030 Overwriting existing node registration for 'TestNode'\n\u001b[31m\u001b[1m_ TestStringBasedNodeConfigurations.test_workflow_uses_string_node_references _\u001b[0m\n\u001b[1m\u001b[31msrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py\u001b[0m:401: in test_workflow_uses_string_node_references\n    \u001b[0mnode_types = [node[\u001b[33m\"\u001b[39;49;00m\u001b[33mnode_type\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m] \u001b[94mfor\u001b[39;49;00m node \u001b[95min\u001b[39;49;00m nodes]\u001b[90m\u001b[39;49;00m\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31msrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py\u001b[0m:401: in <listcomp>\n    \u001b[0mnode_types = [node[\u001b[33m\"\u001b[39;49;00m\u001b[33mnode_type\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m] \u001b[94mfor\u001b[39;49;00m node \u001b[95min\u001b[39;49;00m nodes]\u001b[90m\u001b[39;49;00m\n                  ^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   TypeError: string indices must be integers, not 'str'\u001b[0m\n\u001b[31m\u001b[1m_ TestStringBasedNodeConfigurations.test_workflow_rejects_object_based_node_instantiation _\u001b[0m\n\u001b[1m\u001b[31mvenv\\Lib\\site-packages\\kailash\\nodes\\base.py\u001b[0m:291: in __init__\n    \u001b[0m\u001b[96mself\u001b[39;49;00m._validate_config()\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mvenv\\Lib\\site-packages\\kailash\\nodes\\base.py\u001b[0m:547: in _validate_config\n    \u001b[0m\u001b[94mif\u001b[39;49;00m param_def.required \u001b[95mand\u001b[39;49;00m param_def.default \u001b[95mis\u001b[39;49;00m \u001b[94mNone\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n       ^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AttributeError: 'dict' object has no attribute 'required'\u001b[0m\n\n\u001b[33mThe above exception was the direct cause of the following exception:\u001b[0m\n\u001b[1m\u001b[31msrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py\u001b[0m:426: in test_workflow_rejects_object_based_node_instantiation\n    \u001b[0mmock_node_instance = MockNode()\u001b[90m\u001b[39;49;00m\n                         ^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mvenv\\Lib\\site-packages\\kailash\\nodes\\base.py\u001b[0m:295: in __init__\n    \u001b[0m\u001b[94mraise\u001b[39;49;00m NodeConfigurationError(\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   kailash.sdk_exceptions.NodeConfigurationError: Failed to initialize node 'MockNode': 'dict' object has no attribute 'required'\u001b[0m\n\u001b[31m\u001b[1m_ TestStringBasedNodeConfigurations.test_workflow_parameter_injection_patterns _\u001b[0m\n\u001b[1m\u001b[31msrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py\u001b[0m:441: in test_workflow_parameter_injection_patterns\n    \u001b[0m\u001b[94massert\u001b[39;49;00m demo_result[\u001b[33m\"\u001b[39;49;00m\u001b[33mmethod_1_config\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m] \u001b[95mis\u001b[39;49;00m \u001b[94mTrue\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mDirect configuration parameters not demonstrated\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AssertionError: Direct configuration parameters not demonstrated\u001b[0m\n\u001b[1m\u001b[31mE   assert False is True\u001b[0m\n\u001b[31m\u001b[1m________ TestComplianceIntegration.test_compliance_violation_detection ________\u001b[0m\n\u001b[1m\u001b[31mvenv\\Lib\\site-packages\\kailash\\nodes\\base.py\u001b[0m:291: in __init__\n    \u001b[0m\u001b[96mself\u001b[39;49;00m._validate_config()\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mvenv\\Lib\\site-packages\\kailash\\nodes\\base.py\u001b[0m:547: in _validate_config\n    \u001b[0m\u001b[94mif\u001b[39;49;00m param_def.required \u001b[95mand\u001b[39;49;00m param_def.default \u001b[95mis\u001b[39;49;00m \u001b[94mNone\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n       ^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AttributeError: 'dict' object has no attribute 'required'\u001b[0m\n\n\u001b[33mThe above exception was the direct cause of the following exception:\u001b[0m\n\u001b[1m\u001b[31msrc\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py\u001b[0m:621: in test_compliance_violation_detection\n    \u001b[0mnode2 = NonCompliantNode2()\u001b[90m\u001b[39;49;00m\n            ^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mvenv\\Lib\\site-packages\\kailash\\nodes\\base.py\u001b[0m:295: in __init__\n    \u001b[0m\u001b[94mraise\u001b[39;49;00m NodeConfigurationError(\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   kailash.sdk_exceptions.NodeConfigurationError: Failed to initialize node 'NonCompliantNode2': 'dict' object has no attribute 'required'\u001b[0m\n\u001b[36m\u001b[1m=========================== short test summary info ===========================\u001b[0m\n\u001b[31mFAILED\u001b[0m src\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py::\u001b[1mTestRegisterNodeDecorator::test_register_node_supports_standard_sdk_patterns\u001b[0m - TypeError: register_node() got an unexpected keyword argument 'tags'\n\u001b[31mFAILED\u001b[0m src\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py::\u001b[1mTestNodeExecutionPatterns::test_node_implements_run_as_primary_interface\u001b[0m - kailash.sdk_exceptions.NodeConfigurationError: Failed to initialize node 'T...\n\u001b[31mFAILED\u001b[0m src\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py::\u001b[1mTestNodeExecutionPatterns::test_workflow_build_method_called_before_execution\u001b[0m - kailash.sdk_exceptions.WorkflowValidationError: Failed to add node 'test_qu...\n\u001b[31mFAILED\u001b[0m src\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py::\u001b[1mTestStringBasedNodeConfigurations::test_workflow_uses_string_node_references\u001b[0m - TypeError: string indices must be integers, not 'str'\n\u001b[31mFAILED\u001b[0m src\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py::\u001b[1mTestStringBasedNodeConfigurations::test_workflow_rejects_object_based_node_instantiation\u001b[0m - kailash.sdk_exceptions.NodeConfigurationError: Failed to initialize node 'M...\n\u001b[31mFAILED\u001b[0m src\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py::\u001b[1mTestStringBasedNodeConfigurations::test_workflow_parameter_injection_patterns\u001b[0m - AssertionError: Direct configuration parameters not demonstrated\n\u001b[31mFAILED\u001b[0m src\\new_project\\tests\\unit\\test_sdk_compliance_foundation.py::\u001b[1mTestComplianceIntegration::test_compliance_violation_detection\u001b[0m - kailash.sdk_exceptions.NodeConfigurationError: Failed to initialize node 'N...\n\u001b[31m======================== \u001b[31m\u001b[1m7 failed\u001b[0m, \u001b[32m14 passed\u001b[0m\u001b[31m in 4.87s\u001b[0m\u001b[31m =========================\u001b[0m\n",
      "errors": "",
      "tests_run": 0,
      "tests_passed": 0,
      "tests_failed": 0,
      "tests_skipped": 0
    }
  },
  "environment_info": {
    "python_version": "3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]",
    "working_directory": "C:\\Users\\fujif\\OneDrive\\Documents\\GitHub\\horme-pov",
    "test_directory": "C:\\Users\\fujif\\OneDrive\\Documents\\GitHub\\horme-pov\\src\\new_project"
  }
}