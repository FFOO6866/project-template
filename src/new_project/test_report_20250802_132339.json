{
  "execution_summary": {
    "start_time": 1754112206.4454954,
    "total_execution_time": 13.072388648986816,
    "total_tests_run": 0,
    "total_tests_passed": 0,
    "total_tests_failed": 0,
    "success_rate": 0.0
  },
  "test_results": {
    "environment": {
      "python_available": true,
      "pytest_available": true,
      "docker_available": false,
      "kailash_sdk_available": true,
      "test_dependencies": [],
      "missing_dependencies": [
        "docker"
      ],
      "docker_services": {}
    },
    "compliance": {
      "status": "failed",
      "checks_performed": [
        "Test file exists: tests/unit/test_sdk_compliance_foundation.py",
        "Test file exists: tests/integration/test_sdk_compliance_integration.py",
        "Test file exists: tests/e2e/test_sdk_compliance_e2e.py",
        "Config file exists: pytest.ini",
        "Test class found: TestRegisterNodeDecorator",
        "Test class found: TestSecureGovernedNode",
        "Test class found: TestNodeExecutionPatterns",
        "Test class found: TestStringBasedNodeConfigurations"
      ],
      "violations_found": [
        "Missing config file: conftest.py"
      ],
      "compliance_score": 90
    },
    "unit": {
      "tier": "unit",
      "description": "Unit tests (Tier 1)",
      "status": "failed",
      "return_code": 1,
      "execution_time": 10.187106847763062,
      "output": "\u001b[1m============================= test session starts =============================\u001b[0m\nplatform win32 -- Python 3.11.9, pytest-8.4.1, pluggy-1.6.0 -- C:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\python.exe\ncachedir: .pytest_cache\nrootdir: C:\\Users\\fujif\\OneDrive\\Documents\\GitHub\\horme-pov\\src\\new_project\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, Faker-37.5.3, asyncio-1.1.0, cov-6.2.1, forked-1.6.0, mock-3.14.1, split-0.10.0, timeout-2.4.0, xdist-3.8.0\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ntimeout: 10.0s\ntimeout method: thread\ntimeout func_only: False\n\u001b[1mcollecting ... \u001b[0mcollected 392 items\n\ntests/unit/test_chromadb_vector_database.py::TestChromaDBCollections::test_collection_types_defined \u001b[32mPASSED\u001b[0m\u001b[32m [  0%]\u001b[0m\ntests/unit/test_chromadb_vector_database.py::TestChromaDBCollections::test_product_collection_config \u001b[32mPASSED\u001b[0m\u001b[32m [  0%]\u001b[0m\ntests/unit/test_chromadb_vector_database.py::TestChromaDBCollections::test_manual_collection_config \u001b[32mPASSED\u001b[0m\u001b[32m [  0%]\u001b[0m\ntests/unit/test_chromadb_vector_database.py::TestChromaDBCollections::test_safety_collection_config \u001b[32mPASSED\u001b[0m\u001b[32m [  1%]\u001b[0m\ntests/unit/test_chromadb_vector_database.py::TestChromaDBCollections::test_project_collection_config \u001b[32mPASSED\u001b[0m\u001b[32m [  1%]\u001b[0m\ntests/unit/test_chromadb_vector_database.py::TestVectorDatabaseService::test_service_initialization \u001b[32mPASSED\u001b[0m\u001b[32m [  1%]\u001b[0m\ntests/unit/test_chromadb_vector_database.py::TestVectorDatabaseService::test_create_collection \u001b[31mFAILED\u001b[0m\u001b[31m [  1%]\u001b[0m\ntests/unit/test_chromadb_vector_database.py::TestVectorDatabaseService::test_add_product_embedding \u001b[32mPASSED\u001b[0m\u001b[31m [  2%]\u001b[0m\ntests/unit/test_chromadb_vector_database.py::TestVectorDatabaseService::test_add_manual_embedding \u001b[32mPASSED\u001b[0m\u001b[31m [  2%]\u001b[0m\ntests/unit/test_chromadb_vector_database.py::TestVectorDatabaseService::test_add_safety_embedding \u001b[32mPASSED\u001b[0m\u001b[31m [  2%]\u001b[0m\ntests/unit/test_chromadb_vector_database.py::TestVectorDatabaseService::test_add_project_pattern_embedding \u001b[32mPASSED\u001b[0m\u001b[31m [  2%]\u001b[0m\ntests/unit/test_chromadb_vector_database.py::TestVectorDatabaseService::test_similarity_search_products \u001b[32mPASSED\u001b[0m\u001b[31m [  3%]\u001b[0m\ntests/unit/test_chromadb_vector_database.py::TestVectorDatabaseService::test_similarity_search_with_filters \u001b[32mPASSED\u001b[0m\u001b[31m [  3%]\u001b[0m\ntests/unit/test_chromadb_vector_database.py::TestVectorDatabaseService::test_batch_add_embeddings \u001b[32mPASSED\u001b[0m\u001b[31m [  3%]\u001b[0m\ntests/unit/test_chromadb_vector_database.py::TestVectorDatabaseService::test_delete_embedding \u001b[32mPASSED\u001b[0m\u001b[31m [  3%]\u001b[0m\ntests/unit/test_chromadb_vector_database.py::TestVectorDatabaseService::test_update_embedding \u001b[32mPASSED\u001b[0m\u001b[31m [  4%]\u001b[0m\ntests/unit/test_chromadb_vector_database.py::TestVectorDatabaseService::test_get_collection_stats \u001b[32mPASSED\u001b[0m\u001b[31m [  4%]\u001b[0m\ntests/unit/test_chromadb_vector_database.py::TestVectorDatabaseService::test_error_handling_invalid_embedding_dimension \u001b[32mPASSED\u001b[0m\u001b[31m [  4%]\u001b[0m\ntests/unit/test_chromadb_vector_database.py::TestVectorDatabaseService::test_error_handling_missing_required_fields \u001b[32mPASSED\u001b[0m\u001b[31m [  4%]\u001b[0m\ntests/unit/test_chromadb_vector_database.py::TestVectorDatabaseService::test_error_handling_collection_not_found \u001b[32mPASSED\u001b[0m\u001b[31m [  5%]\u001b[0m\ntests/unit/test_chromadb_vector_database.py::TestVectorDatabasePerformance::test_embedding_creation_performance \u001b[32mPASSED\u001b[0m\u001b[31m [  5%]\u001b[0m\ntests/unit/test_chromadb_vector_database.py::TestVectorDatabasePerformance::test_similarity_search_performance \u001b[32mPASSED\u001b[0m\u001b[31m [  5%]\u001b[0m\ntests/unit/test_chromadb_vector_database.py::TestVectorDatabasePerformance::test_batch_operations_performance \u001b[32mPASSED\u001b[0m\u001b[31m [  5%]\u001b[0m\ntests/unit/test_chromadb_vector_database.py::TestVectorDatabaseModels::test_product_embedding_model \u001b[32mPASSED\u001b[0m\u001b[31m [  6%]\u001b[0m\ntests/unit/test_chromadb_vector_database.py::TestVectorDatabaseModels::test_manual_embedding_model \u001b[32mPASSED\u001b[0m\u001b[31m [  6%]\u001b[0m\ntests/unit/test_chromadb_vector_database.py::TestVectorDatabaseModels::test_safety_embedding_model \u001b[32mPASSED\u001b[0m\u001b[31m [  6%]\u001b[0m\ntests/unit/test_chromadb_vector_database.py::TestVectorDatabaseModels::test_project_embedding_model \u001b[32mPASSED\u001b[0m\u001b[31m [  6%]\u001b[0m\ntests/unit/test_chromadb_vector_database.py::TestVectorDatabaseModels::test_invalid_embedding_vector_dimension \u001b[32mPASSED\u001b[0m\u001b[31m [  7%]\u001b[0m\ntests/unit/test_chromadb_vector_database.py::TestVectorDatabaseModels::test_invalid_severity_level \u001b[32mPASSED\u001b[0m\u001b[31m [  7%]\u001b[0m\ntests/unit/test_classification_models.py::TestUNSPSCCodeModel::test_unspsc_model_has_db_decorator \u001b[32mPASSED\u001b[0m\u001b[31m [  7%]\u001b[0m\ntests/unit/test_classification_models.py::TestUNSPSCCodeModel::test_unspsc_model_fields \u001b[32mPASSED\u001b[0m\u001b[31m [  7%]\u001b[0m\ntests/unit/test_classification_models.py::TestUNSPSCCodeModel::test_unspsc_code_primary_key \u001b[32mPASSED\u001b[0m\u001b[31m [  8%]\u001b[0m\ntests/unit/test_classification_models.py::TestUNSPSCCodeModel::test_unspsc_hierarchical_structure \u001b[32mPASSED\u001b[0m\u001b[31m [  8%]\u001b[0m\ntests/unit/test_classification_models.py::TestUNSPSCCodeModel::test_unspsc_code_validation_logic \u001b[32mPASSED\u001b[0m\u001b[31m [  8%]\u001b[0m\ntests/unit/test_classification_models.py::TestUNSPSCCodeModel::test_unspsc_level_hierarchy_validation \u001b[32mPASSED\u001b[0m\u001b[31m [  8%]\u001b[0m\ntests/unit/test_classification_models.py::TestUNSPSCCodeModel::test_unspsc_field_constraints \u001b[32mPASSED\u001b[0m\u001b[31m [  9%]\u001b[0m\ntests/unit/test_classification_models.py::TestUNSPSCCodeModel::test_unspsc_auto_generated_nodes \u001b[32mPASSED\u001b[0m\u001b[31m [  9%]\u001b[0m\ntests/unit/test_classification_models.py::TestUNSPSCCodeModel::test_unspsc_indexing_strategy \u001b[32mPASSED\u001b[0m\u001b[31m [  9%]\u001b[0m\ntests/unit/test_classification_models.py::TestETIMClassModel::test_etim_model_has_db_decorator \u001b[32mPASSED\u001b[0m\u001b[31m [  9%]\u001b[0m\ntests/unit/test_classification_models.py::TestETIMClassModel::test_etim_model_fields \u001b[32mPASSED\u001b[0m\u001b[31m [ 10%]\u001b[0m\ntests/unit/test_classification_models.py::TestETIMClassModel::test_etim_class_id_primary_key \u001b[32mPASSED\u001b[0m\u001b[31m [ 10%]\u001b[0m\ntests/unit/test_classification_models.py::TestETIMClassModel::test_etim_multi_language_support \u001b[32mPASSED\u001b[0m\u001b[31m [ 10%]\u001b[0m\ntests/unit/test_classification_models.py::TestETIMClassModel::test_etim_hierarchical_structure \u001b[32mPASSED\u001b[0m\u001b[31m [ 10%]\u001b[0m\ntests/unit/test_classification_models.py::TestETIMClassModel::test_etim_version_field \u001b[32mPASSED\u001b[0m\u001b[31m [ 11%]\u001b[0m\ntests/unit/test_classification_models.py::TestETIMClassModel::test_etim_field_constraints \u001b[32mPASSED\u001b[0m\u001b[31m [ 11%]\u001b[0m\ntests/unit/test_classification_models.py::TestETIMClassModel::test_etim_auto_generated_nodes \u001b[32mPASSED\u001b[0m\u001b[31m [ 11%]\u001b[0m\ntests/unit/test_classification_models.py::TestETIMClassModel::test_etim_indexing_strategy \u001b[32mPASSED\u001b[0m\u001b[31m [ 11%]\u001b[0m\ntests/unit/test_classification_models.py::TestClassificationIntegration::test_classification_models_exist \u001b[32mPASSED\u001b[0m\u001b[31m [ 12%]\u001b[0m\ntests/unit/test_classification_models.py::TestClassificationIntegration::test_product_classification_relationships \u001b[32mPASSED\u001b[0m\u001b[31m [ 12%]\u001b[0m\ntests/unit/test_classification_models.py::TestClassificationIntegration::test_classification_hierarchy_queries \u001b[32mPASSED\u001b[0m\u001b[31m [ 12%]\u001b[0m\ntests/unit/test_classification_models.py::TestClassificationIntegration::test_classification_search_capabilities \u001b[32mPASSED\u001b[0m\u001b[31m [ 13%]\u001b[0m\ntests/unit/test_classification_models.py::TestClassificationDataIntegrity::test_unspsc_code_format_validation \u001b[32mPASSED\u001b[0m\u001b[31m [ 13%]\u001b[0m\ntests/unit/test_classification_models.py::TestClassificationDataIntegrity::test_etim_class_id_validation \u001b[32mPASSED\u001b[0m\u001b[31m [ 13%]\u001b[0m\ntests/unit/test_classification_models.py::TestClassificationDataIntegrity::test_classification_referential_integrity \u001b[32mPASSED\u001b[0m\u001b[31m [ 13%]\u001b[0m\ntests/unit/test_classification_models.py::TestClassificationDataIntegrity::test_classification_uniqueness_constraints \u001b[32mPASSED\u001b[0m\u001b[31m [ 14%]\u001b[0m\ntests/unit/test_classification_models.py::TestClassificationPerformance::test_hierarchical_query_optimization \u001b[32mPASSED\u001b[0m\u001b[31m [ 14%]\u001b[0m\ntests/unit/test_classification_models.py::TestClassificationPerformance::test_search_performance_optimization \u001b[32mPASSED\u001b[0m\u001b[31m [ 14%]\u001b[0m\ntests/unit/test_classification_models.py::TestClassificationPerformance::test_foreign_key_performance \u001b[32mPASSED\u001b[0m\u001b[31m [ 14%]\u001b[0m\ntests/unit/test_classification_nodes_sdk_compliance.py::TestParameterDefinitionCompliance::test_unspsc_node_uses_node_parameter_objects \u001b[32mPASSED\u001b[0m\u001b[31m [ 15%]\u001b[0m\ntests/unit/test_classification_nodes_sdk_compliance.py::TestParameterDefinitionCompliance::test_etim_node_uses_node_parameter_objects \u001b[32mPASSED\u001b[0m\u001b[31m [ 15%]\u001b[0m\ntests/unit/test_classification_nodes_sdk_compliance.py::TestParameterDefinitionCompliance::test_dual_classification_node_uses_node_parameter_objects \u001b[32mPASSED\u001b[0m\u001b[31m [ 15%]\u001b[0m\ntests/unit/test_classification_nodes_sdk_compliance.py::TestParameterDefinitionCompliance::test_no_deprecated_dict_parameter_definitions \u001b[32mPASSED\u001b[0m\u001b[31m [ 15%]\u001b[0m\ntests/unit/test_classification_nodes_sdk_compliance.py::TestRegisterNodeDecoratorCompliance::test_unspsc_node_has_register_node_decorator \u001b[32mPASSED\u001b[0m\u001b[31m [ 16%]\u001b[0m\ntests/unit/test_classification_nodes_sdk_compliance.py::TestRegisterNodeDecoratorCompliance::test_etim_node_has_register_node_decorator \u001b[32mPASSED\u001b[0m\u001b[31m [ 16%]\u001b[0m\ntests/unit/test_classification_nodes_sdk_compliance.py::TestRegisterNodeDecoratorCompliance::test_dual_classification_node_has_register_node_decorator \u001b[32mPASSED\u001b[0m\u001b[31m [ 16%]\u001b[0m\ntests/unit/test_classification_nodes_sdk_compliance.py::TestRegisterNodeDecoratorCompliance::test_register_node_decorator_supports_sdk_patterns \u001b[32mPASSED\u001b[0m\u001b[31m [ 16%]\u001b[0m\ntests/unit/test_classification_nodes_sdk_compliance.py::TestMethodInterfaceCompliance::test_nodes_implement_run_as_primary_interface \u001b[32mPASSED\u001b[0m\u001b[31m [ 17%]\u001b[0m\ntests/unit/test_classification_nodes_sdk_compliance.py::TestMethodInterfaceCompliance::test_run_method_accepts_dict_inputs \u001b[32mPASSED\u001b[0m\u001b[31m [ 17%]\u001b[0m\ntests/unit/test_classification_nodes_sdk_compliance.py::TestMethodInterfaceCompliance::test_run_method_with_minimal_required_params \u001b[32mPASSED\u001b[0m\u001b[31m [ 17%]\u001b[0m\ntests/unit/test_classification_nodes_sdk_compliance.py::TestSDKWorkflowIntegration::test_unspsc_node_in_workflow_execution_pattern \u001b[31mFAILED\u001b[0m\u001b[31m [ 17%]\u001b[0m\ntests/unit/test_classification_nodes_sdk_compliance.py::TestSDKWorkflowIntegration::test_all_nodes_support_string_based_workflow_api \u001b[32mPASSED\u001b[0m\u001b[31m [ 18%]\u001b[0m\ntests/unit/test_classification_nodes_sdk_compliance.py::TestParameterValidationWithNodeParameters::test_node_parameter_validation_catches_type_errors \u001b[32mPASSED\u001b[0m\u001b[31m [ 18%]\u001b[0m\ntests/unit/test_classification_nodes_sdk_compliance.py::TestParameterValidationWithNodeParameters::test_node_parameter_provides_default_values \u001b[32mPASSED\u001b[0m\u001b[31m [ 18%]\u001b[0m\ntests/unit/test_classification_nodes_sdk_compliance.py::TestParameterValidationWithNodeParameters::test_required_parameter_validation_works \u001b[31mFAILED\u001b[0m\u001b[31m [ 18%]\u001b[0m\ntests/unit/test_classification_nodes_sdk_compliance.py::TestPerformanceWithFixedImplementation::test_parameter_validation_performance \u001b[32mPASSED\u001b[0m\u001b[31m [ 19%]\u001b[0m\ntests/unit/test_classification_nodes_sdk_compliance.py::TestPerformanceWithFixedImplementation::test_node_instantiation_performance \u001b[32mPASSED\u001b[0m\u001b[31m [ 19%]\u001b[0m\ntests/unit/test_core_models.py::TestProductModel::test_product_model_has_db_decorator \u001b[32mPASSED\u001b[0m\u001b[31m [ 19%]\u001b[0m\ntests/unit/test_core_models.py::TestProductModel::test_product_model_fields \u001b[32mPASSED\u001b[0m\u001b[31m [ 19%]\u001b[0m\ntests/unit/test_core_models.py::TestProductModel::test_product_field_constraints \u001b[32mPASSED\u001b[0m\u001b[31m [ 20%]\u001b[0m\ntests/unit/test_core_models.py::TestProductModel::test_product_soft_delete_support \u001b[32mPASSED\u001b[0m\u001b[31m [ 20%]\u001b[0m\ntests/unit/test_core_models.py::TestProductModel::test_product_audit_trail_support \u001b[32mPASSED\u001b[0m\u001b[31m [ 20%]\u001b[0m\ntests/unit/test_core_models.py::TestProductModel::test_product_auto_generated_nodes \u001b[32mPASSED\u001b[0m\u001b[31m [ 20%]\u001b[0m\ntests/unit/test_core_models.py::TestProductModel::test_product_specifications_jsonb_field \u001b[32mPASSED\u001b[0m\u001b[31m [ 21%]\u001b[0m\ntests/unit/test_core_models.py::TestProductCategoryModel::test_product_category_model_has_db_decorator \u001b[32mPASSED\u001b[0m\u001b[31m [ 21%]\u001b[0m\ntests/unit/test_core_models.py::TestProductCategoryModel::test_product_category_hierarchical_fields \u001b[32mPASSED\u001b[0m\u001b[31m [ 21%]\u001b[0m\ntests/unit/test_core_models.py::TestProductCategoryModel::test_product_category_self_reference \u001b[32mPASSED\u001b[0m\u001b[31m [ 21%]\u001b[0m\ntests/unit/test_core_models.py::TestProductCategoryModel::test_product_category_unspsc_integration \u001b[32mPASSED\u001b[0m\u001b[31m [ 22%]\u001b[0m\ntests/unit/test_core_models.py::TestProductCategoryModel::test_product_category_level_field \u001b[32mPASSED\u001b[0m\u001b[31m [ 22%]\u001b[0m\ntests/unit/test_core_models.py::TestProductCategoryModel::test_product_category_auto_generated_nodes \u001b[32mPASSED\u001b[0m\u001b[31m [ 22%]\u001b[0m\ntests/unit/test_core_models.py::TestProductSpecificationModel::test_product_specification_model_exists \u001b[32mPASSED\u001b[0m\u001b[31m [ 22%]\u001b[0m\ntests/unit/test_core_models.py::TestProductSpecificationModel::test_product_specification_has_db_decorator \u001b[32mPASSED\u001b[0m\u001b[31m [ 23%]\u001b[0m\ntests/unit/test_core_models.py::TestProductSpecificationModel::test_product_specification_fields \u001b[32mPASSED\u001b[0m\u001b[31m [ 23%]\u001b[0m\ntests/unit/test_core_models.py::TestProductSpecificationModel::test_product_specification_product_relationship \u001b[32mPASSED\u001b[0m\u001b[31m [ 23%]\u001b[0m\ntests/unit/test_core_models.py::TestDataFlowIntegration::test_dataflow_instance_configuration \u001b[32mPASSED\u001b[0m\u001b[31m [ 23%]\u001b[0m\ntests/unit/test_core_models.py::TestDataFlowIntegration::test_models_generate_crud_operations \u001b[32mPASSED\u001b[0m\u001b[31m [ 24%]\u001b[0m\ntests/unit/test_core_models.py::TestDataFlowIntegration::test_postgresql_compatibility \u001b[32mPASSED\u001b[0m\u001b[31m [ 24%]\u001b[0m\ntests/unit/test_core_models.py::TestDataFlowIntegration::test_indexing_strategy \u001b[32mPASSED\u001b[0m\u001b[31m [ 24%]\u001b[0m\ntests/unit/test_core_models.py::TestModelValidation::test_required_field_validation \u001b[32mPASSED\u001b[0m\u001b[31m [ 25%]\u001b[0m\ntests/unit/test_core_models.py::TestModelValidation::test_field_length_constraints \u001b[32mPASSED\u001b[0m\u001b[31m [ 25%]\u001b[0m\ntests/unit/test_core_models.py::TestModelValidation::test_foreign_key_constraints \u001b[32mPASSED\u001b[0m\u001b[31m [ 25%]\u001b[0m\ntests/unit/test_core_models.py::TestModelValidation::test_unique_constraints \u001b[32mPASSED\u001b[0m\u001b[31m [ 25%]\u001b[0m\ntests/unit/test_core_models.py::TestPerformanceConsiderations::test_indexing_for_search_fields \u001b[32mPASSED\u001b[0m\u001b[31m [ 26%]\u001b[0m\ntests/unit/test_core_models.py::TestPerformanceConsiderations::test_jsonb_indexing_support \u001b[32mPASSED\u001b[0m\u001b[31m [ 26%]\u001b[0m\ntests/unit/test_core_models.py::TestPerformanceConsiderations::test_hierarchical_query_support \u001b[32mPASSED\u001b[0m\u001b[31m [ 26%]\u001b[0m\ntests/unit/test_hybrid_recommendation_pipeline.py::TestHybridRecommendationPipeline::test_pipeline_initialization \u001b[32mPASSED\u001b[0m\u001b[31m [ 26%]\u001b[0m\ntests/unit/test_hybrid_recommendation_pipeline.py::TestHybridRecommendationPipeline::test_component_availability_check \u001b[32mPASSED\u001b[0m\u001b[31m [ 27%]\u001b[0m\ntests/unit/test_hybrid_recommendation_pipeline.py::TestHybridRecommendationPipeline::test_component_failure_handling \u001b[31mFAILED\u001b[0m\u001b[31m [ 27%]\u001b[0m\ntests/unit/test_hybrid_recommendation_pipeline.py::TestHybridRecommendationPipeline::test_request_validation \u001b[32mPASSED\u001b[0m\u001b[31m [ 27%]\u001b[0m\ntests/unit/test_hybrid_recommendation_pipeline.py::TestHybridRecommendationPipeline::test_invalid_request_validation \u001b[31mFAILED\u001b[0m\u001b[31m [ 27%]\u001b[0m\ntests/unit/test_hybrid_recommendation_pipeline.py::TestRecommendationEngine::test_knowledge_graph_recommendations \u001b[32mPASSED\u001b[0m\u001b[31m [ 28%]\u001b[0m\ntests/unit/test_hybrid_recommendation_pipeline.py::TestRecommendationEngine::test_vector_database_recommendations \u001b[32mPASSED\u001b[0m\u001b[31m [ 28%]\u001b[0m\ntests/unit/test_hybrid_recommendation_pipeline.py::TestRecommendationEngine::test_openai_recommendations \u001b[32mPASSED\u001b[0m\u001b[31m [ 28%]\u001b[0m\ntests/unit/test_hybrid_recommendation_pipeline.py::TestRecommendationEngine::test_safety_requirements_integration \u001b[31mFAILED\u001b[0m\u001b[31m [ 28%]\u001b[0m\ntests/unit/test_hybrid_recommendation_pipeline.py::TestRecommendationEngine::test_parallel_component_execution \u001b[32mPASSED\u001b[0m\u001b[31m [ 29%]\u001b[0m\ntests/unit/test_hybrid_recommendation_pipeline.py::TestResultMerger::test_result_deduplication \u001b[31mFAILED\u001b[0m\u001b[31m [ 29%]\u001b[0m\ntests/unit/test_hybrid_recommendation_pipeline.py::TestResultMerger::test_confidence_scoring \u001b[32mPASSED\u001b[0m\u001b[31m [ 29%]\u001b[0m\ntests/unit/test_hybrid_recommendation_pipeline.py::TestResultMerger::test_ranking_algorithm \u001b[32mPASSED\u001b[0m\u001b[31m [ 29%]\u001b[0m\ntests/unit/test_hybrid_recommendation_pipeline.py::TestResultMerger::test_budget_filtering \u001b[32mPASSED\u001b[0m\u001b[31m [ 30%]\u001b[0m\ntests/unit/test_hybrid_recommendation_pipeline.py::TestResultMerger::test_skill_level_filtering \u001b[32mPASSED\u001b[0m\u001b[31m [ 30%]\u001b[0m\ntests/unit/test_hybrid_recommendation_pipeline.py::TestResultMerger::test_confidence_threshold_filtering \u001b[32mPASSED\u001b[0m\u001b[31m [ 30%]\u001b[0m\ntests/unit/test_hybrid_recommendation_pipeline.py::TestHybridRecommendationWorkflow::test_complete_recommendation_workflow \u001b[31mFAILED\u001b[0m\u001b[31m [ 30%]\u001b[0m\ntests/unit/test_hybrid_recommendation_pipeline.py::TestHybridRecommendationWorkflow::test_caching_mechanism \u001b[32mPASSED\u001b[0m\u001b[31m [ 31%]\u001b[0m\ntests/unit/test_hybrid_recommendation_pipeline.py::TestHybridRecommendationWorkflow::test_fallback_mechanism \u001b[31mFAILED\u001b[0m\u001b[31m [ 31%]\u001b[0m\ntests/unit/test_hybrid_recommendation_pipeline.py::TestHybridRecommendationPerformance::test_recommendation_pipeline_performance \u001b[32mPASSED\u001b[0m\u001b[31m [ 31%]\u001b[0m\ntests/unit/test_hybrid_recommendation_pipeline.py::TestHybridRecommendationPerformance::test_parallel_execution_performance \u001b[32mPASSED\u001b[0m\u001b[31m [ 31%]\u001b[0m\ntests/unit/test_hybrid_recommendation_pipeline.py::TestHybridRecommendationPerformance::test_caching_performance_improvement \u001b[32mPASSED\u001b[0m\u001b[31m [ 32%]\u001b[0m\ntests/unit/test_hybrid_recommendation_pipeline.py::TestHybridRecommendationModels::test_hybrid_recommendation_request_model \u001b[32mPASSED\u001b[0m\u001b[31m [ 32%]\u001b[0m\ntests/unit/test_hybrid_recommendation_pipeline.py::TestHybridRecommendationModels::test_hybrid_recommendation_response_model \u001b[32mPASSED\u001b[0m\u001b[31m [ 32%]\u001b[0m\ntests/unit/test_hybrid_recommendation_pipeline.py::TestHybridRecommendationModels::test_confidence_metrics_model \u001b[32mPASSED\u001b[0m\u001b[31m [ 32%]\u001b[0m\ntests/unit/test_hybrid_recommendation_pipeline.py::TestHybridRecommendationModels::test_invalid_confidence_scores \u001b[32mPASSED\u001b[0m\u001b[31m [ 33%]\u001b[0m\ntests/unit/test_neo4j_knowledge_graph.py::TestNeo4jSchema::test_schema_node_types_defined \u001b[32mPASSED\u001b[0m\u001b[31m [ 33%]\u001b[0m\ntests/unit/test_neo4j_knowledge_graph.py::TestNeo4jSchema::test_schema_relationship_types_defined \u001b[32mPASSED\u001b[0m\u001b[31m [ 33%]\u001b[0m\ntests/unit/test_neo4j_knowledge_graph.py::TestNeo4jSchema::test_tool_node_properties \u001b[32mPASSED\u001b[0m\u001b[31m [ 33%]\u001b[0m\ntests/unit/test_neo4j_knowledge_graph.py::TestNeo4jSchema::test_task_node_properties \u001b[32mPASSED\u001b[0m\u001b[31m [ 34%]\u001b[0m\ntests/unit/test_neo4j_knowledge_graph.py::TestNeo4jSchema::test_safety_rule_node_properties \u001b[32mPASSED\u001b[0m\u001b[31m [ 34%]\u001b[0m\ntests/unit/test_neo4j_knowledge_graph.py::TestKnowledgeGraphService::test_service_initialization \u001b[32mPASSED\u001b[0m\u001b[31m [ 34%]\u001b[0m\ntests/unit/test_neo4j_knowledge_graph.py::TestKnowledgeGraphService::test_create_tool_node \u001b[31mFAILED\u001b[0m\u001b[31m [ 34%]\u001b[0m\ntests/unit/test_neo4j_knowledge_graph.py::TestKnowledgeGraphService::test_create_task_node \u001b[31mFAILED\u001b[0m\u001b[31m [ 35%]\u001b[0m\ntests/unit/test_neo4j_knowledge_graph.py::TestKnowledgeGraphService::test_create_safety_rule_node \u001b[31mFAILED\u001b[0m\u001b[31m [ 35%]\u001b[0m\ntests/unit/test_neo4j_knowledge_graph.py::TestKnowledgeGraphService::test_create_used_for_relationship \u001b[31mFAILED\u001b[0m\u001b[31m [ 35%]\u001b[0m\ntests/unit/test_neo4j_knowledge_graph.py::TestKnowledgeGraphService::test_create_requires_safety_relationship \u001b[31mFAILED\u001b[0m\u001b[31m [ 35%]\u001b[0m\ntests/unit/test_neo4j_knowledge_graph.py::TestKnowledgeGraphService::test_find_tools_for_task \u001b[31mFAILED\u001b[0m\u001b[31m [ 36%]\u001b[0m\ntests/unit/test_neo4j_knowledge_graph.py::TestKnowledgeGraphService::test_find_safety_requirements_for_tool \u001b[31mFAILED\u001b[0m\u001b[31m [ 36%]\u001b[0m\ntests/unit/test_neo4j_knowledge_graph.py::TestKnowledgeGraphService::test_get_compatible_tools \u001b[31mFAILED\u001b[0m\u001b[31m [ 36%]\u001b[0m\ntests/unit/test_neo4j_knowledge_graph.py::TestKnowledgeGraphService::test_error_handling_connection_failure \u001b[32mPASSED\u001b[0m\u001b[31m [ 36%]\u001b[0m\ntests/unit/test_neo4j_knowledge_graph.py::TestKnowledgeGraphService::test_error_handling_invalid_node_data \u001b[32mPASSED\u001b[0m\u001b[31m [ 37%]\u001b[0m\ntests/unit/test_neo4j_knowledge_graph.py::TestKnowledgeGraphService::test_error_handling_cypher_query_failure \u001b[31mFAILED\u001b[0m\u001b[31m [ 37%]\u001b[0m\ntests/unit/test_neo4j_knowledge_graph.py::TestKnowledgeGraphPerformance::test_node_creation_performance \u001b[31mERROR\u001b[0m\u001b[31m [ 37%]\u001b[0m\ntests/unit/test_neo4j_knowledge_graph.py::TestKnowledgeGraphPerformance::test_relationship_creation_performance \u001b[31mERROR\u001b[0m\u001b[31m [ 38%]\u001b[0m\ntests/unit/test_neo4j_knowledge_graph.py::TestKnowledgeGraphPerformance::test_query_performance \u001b[31mERROR\u001b[0m\u001b[31m [ 38%]\u001b[0m\ntests/unit/test_neo4j_knowledge_graph.py::TestKnowledgeGraphModels::test_tool_model_validation \u001b[32mPASSED\u001b[0m\u001b[31m [ 38%]\u001b[0m\ntests/unit/test_neo4j_knowledge_graph.py::TestKnowledgeGraphModels::test_task_model_validation \u001b[32mPASSED\u001b[0m\u001b[31m [ 38%]\u001b[0m\ntests/unit/test_neo4j_knowledge_graph.py::TestKnowledgeGraphModels::test_safety_rule_model_validation \u001b[32mPASSED\u001b[0m\u001b[31m [ 39%]\u001b[0m\ntests/unit/test_neo4j_knowledge_graph.py::TestKnowledgeGraphModels::test_invalid_tool_model \u001b[32mPASSED\u001b[0m\u001b[31m [ 39%]\u001b[0m\ntests/unit/test_neo4j_knowledge_graph.py::TestKnowledgeGraphModels::test_invalid_task_model \u001b[32mPASSED\u001b[0m\u001b[31m [ 39%]\u001b[0m\ntests/unit/test_openai_integration.py::TestPromptTemplates::test_prompt_template_initialization \u001b[32mPASSED\u001b[0m\u001b[31m [ 39%]\u001b[0m\ntests/unit/test_openai_integration.py::TestPromptTemplates::test_tool_recommendation_template \u001b[31mFAILED\u001b[0m\u001b[31m [ 40%]\u001b[0m\ntests/unit/test_openai_integration.py::TestPromptTemplates::test_safety_assessment_template \u001b[32mPASSED\u001b[0m\u001b[31m [ 40%]\u001b[0m\ntests/unit/test_openai_integration.py::TestPromptTemplates::test_project_analysis_template \u001b[31mFAILED\u001b[0m\u001b[31m [ 40%]\u001b[0m\ntests/unit/test_openai_integration.py::TestPromptTemplates::test_requirement_analysis_template \u001b[31mFAILED\u001b[0m\u001b[31m [ 40%]\u001b[0m\ntests/unit/test_openai_integration.py::TestPromptTemplates::test_compatibility_check_template \u001b[32mPASSED\u001b[0m\u001b[31m [ 41%]\u001b[0m\ntests/unit/test_openai_integration.py::TestPromptTemplates::test_skill_assessment_template \u001b[32mPASSED\u001b[0m\u001b[31m [ 41%]\u001b[0m\ntests/unit/test_openai_integration.py::TestPromptTemplates::test_invalid_template_name \u001b[32mPASSED\u001b[0m\u001b[31m [ 41%]\u001b[0m\ntests/unit/test_openai_integration.py::TestPromptTemplates::test_missing_template_variables \u001b[32mPASSED\u001b[0m\u001b[31m [ 41%]\u001b[0m\ntests/unit/test_openai_integration.py::TestOpenAIIntegrationService::test_service_initialization \u001b[32mPASSED\u001b[0m\u001b[31m [ 42%]\u001b[0m\ntests/unit/test_openai_integration.py::TestOpenAIIntegrationService::test_tool_recommendation_analysis \u001b[32mPASSED\u001b[0m\u001b[31m [ 42%]\u001b[0m\ntests/unit/test_openai_integration.py::TestOpenAIIntegrationService::test_safety_assessment_analysis \u001b[32mPASSED\u001b[0m\u001b[31m [ 42%]\u001b[0m\ntests/unit/test_openai_integration.py::TestOpenAIIntegrationService::test_project_analysis \u001b[32mPASSED\u001b[0m\u001b[31m [ 42%]\u001b[0m\ntests/unit/test_openai_integration.py::TestOpenAIIntegrationService::test_natural_language_query_processing \u001b[32mPASSED\u001b[0m\u001b[31m [ 43%]\u001b[0m\ntests/unit/test_openai_integration.py::TestOpenAIIntegrationService::test_response_validation_and_parsing \u001b[31mFAILED\u001b[0m\u001b[31m [ 43%]\u001b[0m\ntests/unit/test_openai_integration.py::TestOpenAIIntegrationService::test_error_handling_invalid_json_response \u001b[32mPASSED\u001b[0m\u001b[31m [ 43%]\u001b[0m\ntests/unit/test_openai_integration.py::TestOpenAIIntegrationService::test_error_handling_api_failure \u001b[32mPASSED\u001b[0m\u001b[31m [ 43%]\u001b[0m\ntests/unit/test_openai_integration.py::TestOpenAIIntegrationService::test_rate_limiting_and_retry_logic \u001b[31mFAILED\u001b[0m\u001b[31m [ 44%]\u001b[0m\ntests/unit/test_openai_integration.py::TestOpenAIIntegrationService::test_token_usage_tracking \u001b[32mPASSED\u001b[0m\u001b[31m [ 44%]\u001b[0m\ntests/unit/test_openai_integration.py::TestOpenAIIntegrationService::test_prompt_optimization \u001b[31mFAILED\u001b[0m\u001b[31m [ 44%]\u001b[0m\ntests/unit/test_openai_integration.py::TestOpenAIIntegrationPerformance::test_tool_recommendation_performance \u001b[31mFAILED\u001b[0m\u001b[31m [ 44%]\u001b[0m\ntests/unit/test_openai_integration.py::TestOpenAIIntegrationPerformance::test_safety_assessment_performance \u001b[32mPASSED\u001b[0m\u001b[31m [ 45%]\u001b[0m\ntests/unit/test_openai_integration.py::TestOpenAIIntegrationPerformance::test_query_processing_performance \u001b[32mPASSED\u001b[0m\u001b[31m [ 45%]\u001b[0m\ntests/unit/test_openai_integration.py::TestOpenAIIntegrationModels::test_tool_recommendation_request_model \u001b[32mPASSED\u001b[0m\u001b[31m [ 45%]\u001b[0m\ntests/unit/test_openai_integration.py::TestOpenAIIntegrationModels::test_tool_recommendation_response_model \u001b[32mPASSED\u001b[0m\u001b[31m [ 45%]\u001b[0m\ntests/unit/test_openai_integration.py::TestOpenAIIntegrationModels::test_safety_assessment_request_model \u001b[32mPASSED\u001b[0m\u001b[31m [ 46%]\u001b[0m\ntests/unit/test_openai_integration.py::TestOpenAIIntegrationModels::test_safety_assessment_response_model \u001b[32mPASSED\u001b[0m\u001b[31m [ 46%]\u001b[0m\ntests/unit/test_openai_integration.py::TestOpenAIIntegrationModels::test_invalid_skill_level \u001b[32mPASSED\u001b[0m\u001b[31m [ 46%]\u001b[0m\ntests/unit/test_openai_integration.py::TestOpenAIIntegrationModels::test_invalid_confidence_score \u001b[32mPASSED\u001b[0m\u001b[31m [ 46%]\u001b[0m\ntests/unit/test_safety_models.py::TestSafetyStandardModel::test_safety_standard_model_has_db_decorator \u001b[32mPASSED\u001b[0m\u001b[31m [ 47%]\u001b[0m\ntests/unit/test_safety_models.py::TestSafetyStandardModel::test_safety_standard_model_fields \u001b[32mPASSED\u001b[0m\u001b[31m [ 47%]\u001b[0m\ntests/unit/test_safety_models.py::TestSafetyStandardModel::test_safety_standard_unique_code_constraint \u001b[32mPASSED\u001b[0m\u001b[31m [ 47%]\u001b[0m\ntests/unit/test_safety_models.py::TestSafetyStandardModel::test_safety_standard_type_validation \u001b[32mPASSED\u001b[0m\u001b[31m [ 47%]\u001b[0m\ntests/unit/test_safety_models.py::TestSafetyStandardModel::test_safety_severity_level_validation \u001b[32mPASSED\u001b[0m\u001b[31m [ 48%]\u001b[0m\ntests/unit/test_safety_models.py::TestSafetyStandardModel::test_safety_standard_effective_date \u001b[32mPASSED\u001b[0m\u001b[31m [ 48%]\u001b[0m\ntests/unit/test_safety_models.py::TestSafetyStandardModel::test_safety_standard_regulation_text \u001b[32mPASSED\u001b[0m\u001b[31m [ 48%]\u001b[0m\ntests/unit/test_safety_models.py::TestSafetyStandardModel::test_safety_standard_auto_generated_nodes \u001b[32mPASSED\u001b[0m\u001b[31m [ 48%]\u001b[0m\ntests/unit/test_safety_models.py::TestSafetyStandardModel::test_safety_standard_audit_trail \u001b[32mPASSED\u001b[0m\u001b[31m [ 49%]\u001b[0m\ntests/unit/test_safety_models.py::TestComplianceRequirementModel::test_compliance_requirement_model_has_db_decorator \u001b[32mPASSED\u001b[0m\u001b[31m [ 49%]\u001b[0m\ntests/unit/test_safety_models.py::TestComplianceRequirementModel::test_compliance_requirement_model_fields \u001b[32mPASSED\u001b[0m\u001b[31m [ 49%]\u001b[0m\ntests/unit/test_safety_models.py::TestComplianceRequirementModel::test_compliance_requirement_foreign_keys \u001b[32mPASSED\u001b[0m\u001b[31m [ 50%]\u001b[0m\ntests/unit/test_safety_models.py::TestComplianceRequirementModel::test_compliance_requirement_mandatory_flag \u001b[32mPASSED\u001b[0m\u001b[31m [ 50%]\u001b[0m\ntests/unit/test_safety_models.py::TestComplianceRequirementModel::test_compliance_requirement_ppe_flag \u001b[32mPASSED\u001b[0m\u001b[31m [ 50%]\u001b[0m\ntests/unit/test_safety_models.py::TestComplianceRequirementModel::test_compliance_requirement_text_field \u001b[32mPASSED\u001b[0m\u001b[31m [ 50%]\u001b[0m\ntests/unit/test_safety_models.py::TestComplianceRequirementModel::test_compliance_requirement_auto_generated_nodes \u001b[32mPASSED\u001b[0m\u001b[31m [ 51%]\u001b[0m\ntests/unit/test_safety_models.py::TestPPERequirementModel::test_ppe_requirement_model_exists \u001b[32mPASSED\u001b[0m\u001b[31m [ 51%]\u001b[0m\ntests/unit/test_safety_models.py::TestPPERequirementModel::test_ppe_requirement_has_db_decorator \u001b[32mPASSED\u001b[0m\u001b[31m [ 51%]\u001b[0m\ntests/unit/test_safety_models.py::TestPPERequirementModel::test_ppe_requirement_fields \u001b[32mPASSED\u001b[0m\u001b[31m [ 51%]\u001b[0m\ntests/unit/test_safety_models.py::TestPPERequirementModel::test_ppe_requirement_compliance_relationship \u001b[32mPASSED\u001b[0m\u001b[31m [ 52%]\u001b[0m\ntests/unit/test_safety_models.py::TestPPERequirementModel::test_ppe_type_categories \u001b[32mPASSED\u001b[0m\u001b[31m [ 52%]\u001b[0m\ntests/unit/test_safety_models.py::TestSafetyModelIntegration::test_safety_models_exist \u001b[32mPASSED\u001b[0m\u001b[31m [ 52%]\u001b[0m\ntests/unit/test_safety_models.py::TestSafetyModelIntegration::test_product_safety_relationships \u001b[32mPASSED\u001b[0m\u001b[31m [ 52%]\u001b[0m\ntests/unit/test_safety_models.py::TestSafetyModelIntegration::test_safety_hierarchy_relationships \u001b[32mPASSED\u001b[0m\u001b[31m [ 53%]\u001b[0m\ntests/unit/test_safety_models.py::TestSafetyModelIntegration::test_safety_data_integrity \u001b[32mPASSED\u001b[0m\u001b[31m [ 53%]\u001b[0m\ntests/unit/test_safety_models.py::TestSafetyComplianceValidation::test_mandatory_compliance_validation \u001b[32mPASSED\u001b[0m\u001b[31m [ 53%]\u001b[0m\ntests/unit/test_safety_models.py::TestSafetyComplianceValidation::test_severity_level_validation \u001b[32mPASSED\u001b[0m\u001b[31m [ 53%]\u001b[0m\ntests/unit/test_safety_models.py::TestSafetyComplianceValidation::test_effective_date_validation \u001b[32mPASSED\u001b[0m\u001b[31m [ 54%]\u001b[0m\ntests/unit/test_safety_models.py::TestSafetyComplianceValidation::test_ppe_requirement_validation \u001b[32mPASSED\u001b[0m\u001b[31m [ 54%]\u001b[0m\ntests/unit/test_safety_models.py::TestSafetyAuditTrail::test_safety_standard_audit_trail \u001b[32mPASSED\u001b[0m\u001b[31m [ 54%]\u001b[0m\ntests/unit/test_safety_models.py::TestSafetyAuditTrail::test_compliance_requirement_audit_trail \u001b[32mPASSED\u001b[0m\u001b[31m [ 54%]\u001b[0m\ntests/unit/test_safety_models.py::TestSafetyAuditTrail::test_safety_model_versioning \u001b[32mPASSED\u001b[0m\u001b[31m [ 55%]\u001b[0m\ntests/unit/test_safety_models.py::TestSafetyPerformance::test_safety_standard_indexing \u001b[32mPASSED\u001b[0m\u001b[31m [ 55%]\u001b[0m\ntests/unit/test_safety_models.py::TestSafetyPerformance::test_compliance_requirement_indexing \u001b[32mPASSED\u001b[0m\u001b[31m [ 55%]\u001b[0m\ntests/unit/test_safety_models.py::TestSafetyPerformance::test_safety_search_optimization \u001b[32mPASSED\u001b[0m\u001b[31m [ 55%]\u001b[0m\ntests/unit/test_safety_models.py::TestSafetyLegalCompliance::test_osha_standard_support \u001b[32mPASSED\u001b[0m\u001b[31m [ 56%]\u001b[0m\ntests/unit/test_safety_models.py::TestSafetyLegalCompliance::test_ansi_standard_support \u001b[32mPASSED\u001b[0m\u001b[31m [ 56%]\u001b[0m\ntests/unit/test_safety_models.py::TestSafetyLegalCompliance::test_regulatory_text_storage \u001b[32mPASSED\u001b[0m\u001b[31m [ 56%]\u001b[0m\ntests/unit/test_safety_models.py::TestSafetyLegalCompliance::test_compliance_documentation \u001b[32mPASSED\u001b[0m\u001b[31m [ 56%]\u001b[0m\ntests/unit/test_sdk_compliance_foundation.py::TestRegisterNodeDecorator::test_register_node_decorator_follows_sdk_standards \u001b[32mPASSED\u001b[0m\u001b[31m [ 57%]\u001b[0m\ntests/unit/test_sdk_compliance_foundation.py::TestRegisterNodeDecorator::test_register_node_works_with_minimal_parameters \u001b[32mPASSED\u001b[0m\u001b[31m [ 57%]\u001b[0m\ntests/unit/test_sdk_compliance_foundation.py::TestRegisterNodeDecorator::test_register_node_supports_standard_sdk_patterns \u001b[31mFAILED\u001b[0m\u001b[31m [ 57%]\u001b[0m\ntests/unit/test_sdk_compliance_foundation.py::TestRegisterNodeDecorator::test_register_node_allows_multiple_registrations \u001b[32mPASSED\u001b[0m\u001b[31m [ 57%]\u001b[0m\ntests/unit/test_sdk_compliance_foundation.py::TestSecureGovernedNode::test_secure_governed_node_parameter_validation \u001b[32mPASSED\u001b[0m\u001b[31m [ 58%]\u001b[0m\ntests/unit/test_sdk_compliance_foundation.py::TestSecureGovernedNode::test_secure_governed_node_rejects_invalid_parameters \u001b[32mPASSED\u001b[0m\u001b[31m [ 58%]\u001b[0m\ntests/unit/test_sdk_compliance_foundation.py::TestSecureGovernedNode::test_secure_governed_node_sanitizes_sensitive_data \u001b[32mPASSED\u001b[0m\u001b[31m [ 58%]\u001b[0m\ntests/unit/test_sdk_compliance_foundation.py::TestSecureGovernedNode::test_secure_governed_node_audit_logging \u001b[32mPASSED\u001b[0m\u001b[31m [ 58%]\u001b[0m\ntests/unit/test_sdk_compliance_foundation.py::TestNodeExecutionPatterns::test_node_implements_run_as_primary_interface \u001b[31mFAILED\u001b[0m\u001b[31m [ 59%]\u001b[0m\ntests/unit/test_sdk_compliance_foundation.py::TestNodeExecutionPatterns::test_workflow_uses_runtime_execute_pattern \u001b[32mPASSED\u001b[0m\u001b[31m [ 59%]\u001b[0m\ntests/unit/test_sdk_compliance_foundation.py::TestNodeExecutionPatterns::test_workflow_build_method_called_before_execution \u001b[31mFAILED\u001b[0m\u001b[31m [ 59%]\u001b[0m\ntests/unit/test_sdk_compliance_foundation.py::TestStringBasedNodeConfigurations::test_workflow_uses_string_node_references \u001b[31mFAILED\u001b[0m\u001b[31m [ 59%]\u001b[0m\ntests/unit/test_sdk_compliance_foundation.py::TestStringBasedNodeConfigurations::test_workflow_rejects_object_based_node_instantiation \u001b[31mFAILED\u001b[0m\u001b[31m [ 60%]\u001b[0m\ntests/unit/test_sdk_compliance_foundation.py::TestStringBasedNodeConfigurations::test_workflow_parameter_injection_patterns \u001b[31mFAILED\u001b[0m\u001b[31m [ 60%]\u001b[0m\ntests/unit/test_sdk_compliance_foundation.py::TestParameterValidation::test_parameter_validator_enforces_types \u001b[32mPASSED\u001b[0m\u001b[31m [ 60%]\u001b[0m\ntests/unit/test_sdk_compliance_foundation.py::TestParameterValidation::test_parameter_validator_handles_required_fields \u001b[32mPASSED\u001b[0m\u001b[31m [ 60%]\u001b[0m\ntests/unit/test_sdk_compliance_foundation.py::TestParameterValidation::test_parameter_validator_connection_types \u001b[32mPASSED\u001b[0m\u001b[31m [ 61%]\u001b[0m\ntests/unit/test_sdk_compliance_foundation.py::TestComplianceIntegration::test_end_to_end_compliant_workflow \u001b[32mPASSED\u001b[0m\u001b[31m [ 61%]\u001b[0m\ntests/unit/test_sdk_compliance_foundation.py::TestComplianceIntegration::test_compliance_violation_detection \u001b[31mFAILED\u001b[0m\u001b[31m [ 61%]\u001b[0m\ntests/unit/test_sdk_compliance_foundation.py::TestCompliancePerformance::test_node_registration_performance \u001b[32mPASSED\u001b[0m\u001b[31m [ 61%]\u001b[0m\ntests/unit/test_sdk_compliance_foundation.py::TestCompliancePerformance::test_parameter_validation_performance \u001b[32mPASSED\u001b[0m\u001b[31m [ 62%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestDockerConfigurationValidation::test_docker_compose_file_exists \u001b[32mPASSED\u001b[0m\u001b[31m [ 62%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestDockerConfigurationValidation::test_docker_compose_yaml_structure \u001b[32mPASSED\u001b[0m\u001b[31m [ 62%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestDockerConfigurationValidation::test_required_services_defined \u001b[32mPASSED\u001b[0m\u001b[31m [ 63%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestDockerConfigurationValidation::test_service_port_configuration \u001b[32mPASSED\u001b[0m\u001b[31m [ 63%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestDockerConfigurationValidation::test_service_health_checks \u001b[32mPASSED\u001b[0m\u001b[31m [ 63%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestProductDataFactory::test_create_products_returns_list \u001b[32mPASSED\u001b[0m\u001b[31m [ 63%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestProductDataFactory::test_product_data_structure \u001b[32mPASSED\u001b[0m\u001b[31m [ 64%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestProductDataFactory::test_product_code_uniqueness \u001b[32mPASSED\u001b[0m\u001b[31m [ 64%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestProductDataFactory::test_price_range_validation \u001b[32mPASSED\u001b[0m\u001b[31m [ 64%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestProductDataFactory::test_safety_standards_validation \u001b[32mPASSED\u001b[0m\u001b[31m [ 64%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestProductDataFactory::test_skill_level_validation \u001b[32mPASSED\u001b[0m\u001b[31m [ 65%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestProductDataFactory::test_complexity_score_range \u001b[32mPASSED\u001b[0m\u001b[31m [ 65%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestProductDataFactory::test_embedding_vector_properties \u001b[32mPASSED\u001b[0m\u001b[31m [ 65%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestUserProfileFactory::test_create_user_profiles_returns_list \u001b[32mPASSED\u001b[0m\u001b[31m [ 65%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestUserProfileFactory::test_user_profile_data_structure \u001b[32mPASSED\u001b[0m\u001b[31m [ 66%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestUserProfileFactory::test_user_email_format \u001b[32mPASSED\u001b[0m\u001b[31m [ 66%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestUserProfileFactory::test_experience_years_range \u001b[32mPASSED\u001b[0m\u001b[31m [ 66%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestUserProfileFactory::test_user_id_uniqueness \u001b[32mPASSED\u001b[0m\u001b[31m [ 66%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestSafetyStandardFactory::test_create_safety_standards_returns_list \u001b[32mPASSED\u001b[0m\u001b[31m [ 67%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestSafetyStandardFactory::test_safety_standard_structure \u001b[32mPASSED\u001b[0m\u001b[31m [ 67%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestSafetyStandardFactory::test_safety_organization_values \u001b[32mPASSED\u001b[0m\u001b[31m [ 67%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestSafetyStandardFactory::test_compliance_level_values \u001b[32mPASSED\u001b[0m\u001b[31m [ 67%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestKnowledgeGraphDataFactory::test_create_nodes_returns_list \u001b[32mPASSED\u001b[0m\u001b[31m [ 68%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestKnowledgeGraphDataFactory::test_node_structure \u001b[32mPASSED\u001b[0m\u001b[31m [ 68%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestKnowledgeGraphDataFactory::test_node_types_validation \u001b[32mPASSED\u001b[0m\u001b[31m [ 68%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestKnowledgeGraphDataFactory::test_create_relationships_returns_list \u001b[32mPASSED\u001b[0m\u001b[31m [ 68%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestKnowledgeGraphDataFactory::test_relationship_structure \u001b[32mPASSED\u001b[0m\u001b[31m [ 69%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestKnowledgeGraphDataFactory::test_relationship_types_validation \u001b[32mPASSED\u001b[0m\u001b[31m [ 69%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestKnowledgeGraphDataFactory::test_no_self_relationships \u001b[32mPASSED\u001b[0m\u001b[31m [ 69%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestPerformanceTestDataFactory::test_create_load_test_data_structure \u001b[32mPASSED\u001b[0m\u001b[31m [ 69%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestPerformanceTestDataFactory::test_load_test_data_counts \u001b[32mPASSED\u001b[0m\u001b[31m [ 70%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestPerformanceTestDataFactory::test_search_query_types \u001b[32mPASSED\u001b[0m\u001b[31m [ 70%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestPerformanceMonitoring::test_performance_monitor_start_stop \u001b[32mPASSED\u001b[0m\u001b[31m [ 70%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestPerformanceMonitoring::test_performance_monitor_threshold_validation \u001b[32mPASSED\u001b[0m\u001b[31m [ 70%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestComplianceValidation::test_compliance_validator_node_registration_pass \u001b[32mPASSED\u001b[0m\u001b[31m [ 71%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestComplianceValidation::test_compliance_validator_node_registration_fail \u001b[32mPASSED\u001b[0m\u001b[31m [ 71%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestComplianceValidation::test_compliance_validator_assert_compliant_pass \u001b[32mPASSED\u001b[0m\u001b[31m [ 71%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestComplianceValidation::test_compliance_validator_assert_compliant_fail \u001b[32mPASSED\u001b[0m\u001b[31m [ 71%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestTestEnvironmentConfiguration::test_test_data_directory_structure \u001b[32mPASSED\u001b[0m\u001b[31m [ 72%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestTestEnvironmentConfiguration::test_postgres_init_script_exists \u001b[32mPASSED\u001b[0m\u001b[31m [ 72%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestTestEnvironmentConfiguration::test_neo4j_init_script_exists \u001b[32mPASSED\u001b[0m\u001b[31m [ 72%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestTestEnvironmentConfiguration::test_wiremock_mappings_exist \u001b[32mPASSED\u001b[0m\u001b[31m [ 72%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestPerformanceRequirements::test_unit_test_execution_time \u001b[32mPASSED\u001b[0m\u001b[31m [ 73%]\u001b[0m\ntests/unit/test_test_infrastructure.py::TestPerformanceRequirements::test_data_generation_performance \u001b[32mPASSED\u001b[0m\u001b[31m [ 73%]\u001b[0m\ntests/unit/test_unspsc_etim_classification.py::TestUNSPSCHierarchy::test_unspsc_code_structure_validation \u001b[32mPASSED\u001b[0m\u001b[31m [ 73%]\u001b[0m\ntests/unit/test_unspsc_etim_classification.py::TestUNSPSCHierarchy::test_unspsc_hierarchy_traversal \u001b[32mPASSED\u001b[0m\u001b[31m [ 73%]\u001b[0m\ntests/unit/test_unspsc_etim_classification.py::TestUNSPSCHierarchy::test_unspsc_search_functionality \u001b[32mPASSED\u001b[0m\u001b[31m [ 74%]\u001b[0m\ntests/unit/test_unspsc_etim_classification.py::TestETIMClassification::test_etim_class_structure_validation \u001b[32mPASSED\u001b[0m\u001b[31m [ 74%]\u001b[0m\ntests/unit/test_unspsc_etim_classification.py::TestETIMClassification::test_etim_multi_language_support \u001b[32mPASSED\u001b[0m\u001b[31m [ 74%]\u001b[0m\ntests/unit/test_unspsc_etim_classification.py::TestClassificationEngine::test_ml_classification_engine \u001b[32mPASSED\u001b[0m\u001b[31m [ 75%]\u001b[0m\ntests/unit/test_unspsc_etim_classification.py::TestClassificationEngine::test_dual_classification_system \u001b[32mPASSED\u001b[0m\u001b[31m [ 75%]\u001b[0m\ntests/unit/test_unspsc_etim_classification.py::TestClassificationNodes::test_unspsc_classification_node_parameters \u001b[32mPASSED\u001b[0m\u001b[31m [ 75%]\u001b[0m\ntests/unit/test_unspsc_etim_classification.py::TestClassificationNodes::test_etim_classification_node_parameters \u001b[32mPASSED\u001b[0m\u001b[31m [ 75%]\u001b[0m\ntests/unit/test_unspsc_etim_classification.py::TestClassificationNodes::test_dual_classification_workflow_node \u001b[32mPASSED\u001b[0m\u001b[31m [ 76%]\u001b[0m\ntests/unit/test_unspsc_etim_classification.py::TestCachingAndPerformance::test_classification_caching \u001b[32mPASSED\u001b[0m\u001b[31m [ 76%]\u001b[0m\ntests/unit/test_unspsc_etim_classification.py::TestCachingAndPerformance::test_performance_optimization_strategies \u001b[32mPASSED\u001b[0m\u001b[31m [ 76%]\u001b[0m\ntests/unit/test_unspsc_etim_classification.py::TestErrorHandlingAndEdgeCases::test_invalid_product_data_handling \u001b[32mPASSED\u001b[0m\u001b[31m [ 76%]\u001b[0m\ntests/unit/test_unspsc_etim_classification.py::TestErrorHandlingAndEdgeCases::test_classification_confidence_thresholds \u001b[32mPASSED\u001b[0m\u001b[31m [ 77%]\u001b[0m\ntests/unit/test_unspsc_etim_classification.py::TestErrorHandlingAndEdgeCases::test_multilingual_edge_cases \u001b[32mPASSED\u001b[0m\u001b[31m [ 77%]\u001b[0m\ntests/unit/test_unspsc_etim_classification.py::test_all_unit_tests_performance \u001b[32mPASSED\u001b[0m\u001b[31m [ 77%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfileModel::test_user_profile_model_has_db_decorator \u001b[32mPASSED\u001b[0m\u001b[31m [ 77%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfileModel::test_user_profile_model_fields \u001b[32mPASSED\u001b[0m\u001b[31m [ 78%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfileModel::test_user_profile_user_id_relationship \u001b[32mPASSED\u001b[0m\u001b[31m [ 78%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfileModel::test_user_profile_skill_level_validation \u001b[32mPASSED\u001b[0m\u001b[31m [ 78%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfileModel::test_user_profile_experience_years \u001b[32mPASSED\u001b[0m\u001b[31m [ 78%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfileModel::test_user_profile_safety_certification_flag \u001b[32mPASSED\u001b[0m\u001b[31m [ 79%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfileModel::test_user_profile_preferred_brands_json_array \u001b[32mPASSED\u001b[0m\u001b[31m [ 79%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfileModel::test_user_profile_project_types_json_array \u001b[32mPASSED\u001b[0m\u001b[31m [ 79%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfileModel::test_user_profile_soft_delete_support \u001b[32mPASSED\u001b[0m\u001b[31m [ 79%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfileModel::test_user_profile_audit_trail_support \u001b[32mPASSED\u001b[0m\u001b[31m [ 80%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfileModel::test_user_profile_auto_generated_nodes \u001b[32mPASSED\u001b[0m\u001b[31m [ 80%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestSkillAssessmentModel::test_skill_assessment_model_has_db_decorator \u001b[32mPASSED\u001b[0m\u001b[31m [ 80%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestSkillAssessmentModel::test_skill_assessment_model_fields \u001b[32mPASSED\u001b[0m\u001b[31m [ 80%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestSkillAssessmentModel::test_skill_assessment_user_profile_relationship \u001b[32mPASSED\u001b[0m\u001b[31m [ 81%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestSkillAssessmentModel::test_skill_assessment_category_validation \u001b[32mPASSED\u001b[0m\u001b[31m [ 81%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestSkillAssessmentModel::test_skill_assessment_proficiency_score \u001b[32mPASSED\u001b[0m\u001b[31m [ 81%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestSkillAssessmentModel::test_skill_assessment_assessor_type \u001b[32mPASSED\u001b[0m\u001b[31m [ 81%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestSkillAssessmentModel::test_skill_assessment_temporal_fields \u001b[32mPASSED\u001b[0m\u001b[31m [ 82%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestSkillAssessmentModel::test_skill_assessment_certification_level \u001b[32mPASSED\u001b[0m\u001b[31m [ 82%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestSkillAssessmentModel::test_skill_assessment_auto_generated_nodes \u001b[32mPASSED\u001b[0m\u001b[31m [ 82%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestSafetyCertificationModel::test_safety_certification_model_exists \u001b[32mPASSED\u001b[0m\u001b[31m [ 82%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestSafetyCertificationModel::test_safety_certification_has_db_decorator \u001b[32mPASSED\u001b[0m\u001b[31m [ 83%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestSafetyCertificationModel::test_safety_certification_fields \u001b[32mPASSED\u001b[0m\u001b[31m [ 83%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestSafetyCertificationModel::test_safety_certification_user_profile_relationship \u001b[32mPASSED\u001b[0m\u001b[31m [ 83%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestSafetyCertificationModel::test_safety_certification_types \u001b[32mPASSED\u001b[0m\u001b[31m [ 83%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestSafetyCertificationModel::test_safety_certification_validity_tracking \u001b[32mPASSED\u001b[0m\u001b[31m [ 84%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestSafetyCertificationModel::test_safety_certification_issuing_organization \u001b[32mPASSED\u001b[0m\u001b[31m [ 84%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfileModelIntegration::test_user_profile_models_exist \u001b[32mPASSED\u001b[0m\u001b[31m [ 84%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfileModelIntegration::test_user_profile_skill_relationships \u001b[32mPASSED\u001b[0m\u001b[31m [ 84%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfileModelIntegration::test_user_profile_safety_relationships \u001b[32mPASSED\u001b[0m\u001b[31m [ 85%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfileModelIntegration::test_user_profile_hierarchy \u001b[32mPASSED\u001b[0m\u001b[31m [ 85%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfileBusinessLogic::test_skill_level_progression \u001b[32mPASSED\u001b[0m\u001b[31m [ 85%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfileBusinessLogic::test_experience_years_validation \u001b[32mPASSED\u001b[0m\u001b[31m [ 85%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfileBusinessLogic::test_proficiency_score_validation \u001b[32mPASSED\u001b[0m\u001b[31m [ 86%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfileBusinessLogic::test_safety_certification_status \u001b[32mPASSED\u001b[0m\u001b[31m [ 86%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfileRecommendations::test_preferred_brands_for_recommendations \u001b[32mPASSED\u001b[0m\u001b[31m [ 86%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfileRecommendations::test_project_types_for_recommendations \u001b[32mPASSED\u001b[0m\u001b[31m [ 86%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfileRecommendations::test_skill_categories_for_recommendations \u001b[32mPASSED\u001b[0m\u001b[31m [ 87%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfileRecommendations::test_proficiency_based_recommendations \u001b[32mPASSED\u001b[0m\u001b[31m [ 87%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfilePerformance::test_user_profile_indexing \u001b[32mPASSED\u001b[0m\u001b[31m [ 87%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfilePerformance::test_skill_assessment_indexing \u001b[32mPASSED\u001b[0m\u001b[31m [ 88%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfilePerformance::test_safety_certification_indexing \u001b[32mPASSED\u001b[0m\u001b[31m [ 88%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfilePerformance::test_json_array_indexing \u001b[32mPASSED\u001b[0m\u001b[31m [ 88%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfileAuditTrail::test_user_profile_audit_trail \u001b[32mPASSED\u001b[0m\u001b[31m [ 88%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfileAuditTrail::test_skill_assessment_audit_trail \u001b[32mPASSED\u001b[0m\u001b[31m [ 89%]\u001b[0m\ntests/unit/test_user_profile_models.py::TestUserProfileAuditTrail::test_safety_certification_audit_trail \u001b[32mPASSED\u001b[0m\u001b[31m [ 89%]\u001b[0m\ntests/unit/test_vendor_models.py::TestVendorModel::test_vendor_model_has_db_decorator \u001b[32mPASSED\u001b[0m\u001b[31m [ 89%]\u001b[0m\ntests/unit/test_vendor_models.py::TestVendorModel::test_vendor_model_fields \u001b[32mPASSED\u001b[0m\u001b[31m [ 89%]\u001b[0m\ntests/unit/test_vendor_models.py::TestVendorModel::test_vendor_unique_code_constraint \u001b[32mPASSED\u001b[0m\u001b[31m [ 90%]\u001b[0m\ntests/unit/test_vendor_models.py::TestVendorModel::test_vendor_type_validation \u001b[32mPASSED\u001b[0m\u001b[31m [ 90%]\u001b[0m\ntests/unit/test_vendor_models.py::TestVendorModel::test_vendor_contact_information \u001b[32mPASSED\u001b[0m\u001b[31m [ 90%]\u001b[0m\ntests/unit/test_vendor_models.py::TestVendorModel::test_vendor_address_jsonb_field \u001b[32mPASSED\u001b[0m\u001b[31m [ 90%]\u001b[0m\ntests/unit/test_vendor_models.py::TestVendorModel::test_vendor_business_attributes \u001b[32mPASSED\u001b[0m\u001b[31m [ 91%]\u001b[0m\ntests/unit/test_vendor_models.py::TestVendorModel::test_vendor_soft_delete_support \u001b[32mPASSED\u001b[0m\u001b[31m [ 91%]\u001b[0m\ntests/unit/test_vendor_models.py::TestVendorModel::test_vendor_auto_generated_nodes \u001b[32mPASSED\u001b[0m\u001b[31m [ 91%]\u001b[0m\ntests/unit/test_vendor_models.py::TestProductPricingModel::test_product_pricing_model_has_db_decorator \u001b[32mPASSED\u001b[0m\u001b[31m [ 91%]\u001b[0m\ntests/unit/test_vendor_models.py::TestProductPricingModel::test_product_pricing_model_fields \u001b[32mPASSED\u001b[0m\u001b[31m [ 92%]\u001b[0m\ntests/unit/test_vendor_models.py::TestProductPricingModel::test_product_pricing_foreign_keys \u001b[32mPASSED\u001b[0m\u001b[31m [ 92%]\u001b[0m\ntests/unit/test_vendor_models.py::TestProductPricingModel::test_product_pricing_decimal_fields \u001b[32mPASSED\u001b[0m\u001b[31m [ 92%]\u001b[0m\ntests/unit/test_vendor_models.py::TestProductPricingModel::test_product_pricing_quantity_management \u001b[32mPASSED\u001b[0m\u001b[31m [ 92%]\u001b[0m\ntests/unit/test_vendor_models.py::TestProductPricingModel::test_product_pricing_price_breaks_jsonb \u001b[32mPASSED\u001b[0m\u001b[31m [ 93%]\u001b[0m\ntests/unit/test_vendor_models.py::TestProductPricingModel::test_product_pricing_temporal_fields \u001b[32mPASSED\u001b[0m\u001b[31m [ 93%]\u001b[0m\ntests/unit/test_vendor_models.py::TestProductPricingModel::test_product_pricing_currency_support \u001b[32mPASSED\u001b[0m\u001b[31m [ 93%]\u001b[0m\ntests/unit/test_vendor_models.py::TestProductPricingModel::test_product_pricing_auto_generated_nodes \u001b[32mPASSED\u001b[0m\u001b[31m [ 93%]\u001b[0m\ntests/unit/test_vendor_models.py::TestInventoryLevelModel::test_inventory_level_model_has_db_decorator \u001b[32mPASSED\u001b[0m\u001b[31m [ 94%]\u001b[0m\ntests/unit/test_vendor_models.py::TestInventoryLevelModel::test_inventory_level_model_fields \u001b[32mPASSED\u001b[0m\u001b[31m [ 94%]\u001b[0m\ntests/unit/test_vendor_models.py::TestInventoryLevelModel::test_inventory_level_foreign_keys \u001b[32mPASSED\u001b[0m\u001b[31m [ 94%]\u001b[0m\ntests/unit/test_vendor_models.py::TestInventoryLevelModel::test_inventory_quantity_fields \u001b[32mPASSED\u001b[0m\u001b[31m [ 94%]\u001b[0m\ntests/unit/test_vendor_models.py::TestInventoryLevelModel::test_inventory_availability_status \u001b[32mPASSED\u001b[0m\u001b[31m [ 95%]\u001b[0m\ntests/unit/test_vendor_models.py::TestInventoryLevelModel::test_inventory_location_tracking \u001b[32mPASSED\u001b[0m\u001b[31m [ 95%]\u001b[0m\ntests/unit/test_vendor_models.py::TestInventoryLevelModel::test_inventory_lead_time_tracking \u001b[32mPASSED\u001b[0m\u001b[31m [ 95%]\u001b[0m\ntests/unit/test_vendor_models.py::TestInventoryLevelModel::test_inventory_temporal_tracking \u001b[32mPASSED\u001b[0m\u001b[31m [ 95%]\u001b[0m\ntests/unit/test_vendor_models.py::TestInventoryLevelModel::test_inventory_level_auto_generated_nodes \u001b[32mPASSED\u001b[0m\u001b[31m [ 96%]\u001b[0m\ntests/unit/test_vendor_models.py::TestVendorModelIntegration::test_vendor_models_exist \u001b[32mPASSED\u001b[0m\u001b[31m [ 96%]\u001b[0m\ntests/unit/test_vendor_models.py::TestVendorModelIntegration::test_vendor_product_relationships \u001b[32mPASSED\u001b[0m\u001b[31m [ 96%]\u001b[0m\ntests/unit/test_vendor_models.py::TestVendorModelIntegration::test_multi_vendor_support \u001b[32mPASSED\u001b[0m\u001b[31m [ 96%]\u001b[0m\ntests/unit/test_vendor_models.py::TestVendorModelIntegration::test_vendor_data_consistency \u001b[32mPASSED\u001b[0m\u001b[31m [ 97%]\u001b[0m\ntests/unit/test_vendor_models.py::TestVendorBusinessLogic::test_vendor_preferred_status \u001b[32mPASSED\u001b[0m\u001b[31m [ 97%]\u001b[0m\ntests/unit/test_vendor_models.py::TestVendorBusinessLogic::test_pricing_validity_periods \u001b[32mPASSED\u001b[0m\u001b[31m [ 97%]\u001b[0m\ntests/unit/test_vendor_models.py::TestVendorBusinessLogic::test_inventory_reorder_logic \u001b[32mPASSED\u001b[0m\u001b[31m [ 97%]\u001b[0m\ntests/unit/test_vendor_models.py::TestVendorBusinessLogic::test_quantity_availability_calculation \u001b[32mPASSED\u001b[0m\u001b[31m [ 98%]\u001b[0m\ntests/unit/test_vendor_models.py::TestVendorPerformance::test_vendor_indexing_strategy \u001b[32mPASSED\u001b[0m\u001b[31m [ 98%]\u001b[0m\ntests/unit/test_vendor_models.py::TestVendorPerformance::test_product_pricing_indexing \u001b[32mPASSED\u001b[0m\u001b[31m [ 98%]\u001b[0m\ntests/unit/test_vendor_models.py::TestVendorPerformance::test_inventory_level_indexing \u001b[32mPASSED\u001b[0m\u001b[31m [ 98%]\u001b[0m\ntests/unit/test_vendor_models.py::TestVendorPerformance::test_pricing_query_optimization \u001b[32mPASSED\u001b[0m\u001b[31m [ 99%]\u001b[0m\ntests/unit/test_vendor_models.py::TestVendorAuditTrail::test_vendor_audit_trail \u001b[32mPASSED\u001b[0m\u001b[31m [ 99%]\u001b[0m\ntests/unit/test_vendor_models.py::TestVendorAuditTrail::test_pricing_audit_trail \u001b[32mPASSED\u001b[0m\u001b[31m [ 99%]\u001b[0m\ntests/unit/test_vendor_models.py::TestVendorAuditTrail::test_inventory_audit_trail \u001b[32mPASSED\u001b[0m\u001b[31m [100%]\u001b[0m\n\n=================================== ERRORS ====================================\n\u001b[31m\u001b[1m_ ERROR at setup of TestKnowledgeGraphPerformance.test_node_creation_performance _\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_neo4j_knowledge_graph.py\u001b[0m:409: in knowledge_graph_service\n    \u001b[0m\u001b[94mwith\u001b[39;49;00m patch(\u001b[33m'\u001b[39;49;00m\u001b[33mneo4j.GraphDatabase.driver\u001b[39;49;00m\u001b[33m'\u001b[39;49;00m) \u001b[94mas\u001b[39;49;00m mock_driver:\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\unittest\\mock.py\u001b[0m:1430: in __enter__\n    \u001b[0m\u001b[96mself\u001b[39;49;00m.target = \u001b[96mself\u001b[39;49;00m.getter()\u001b[90m\u001b[39;49;00m\n                  ^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\pkgutil.py\u001b[0m:715: in resolve_name\n    \u001b[0mresult = \u001b[96mgetattr\u001b[39;49;00m(result, p)\u001b[90m\u001b[39;49;00m\n             ^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AttributeError: module 'neo4j' has no attribute 'GraphDatabase'\u001b[0m\n\u001b[31m\u001b[1m_ ERROR at setup of TestKnowledgeGraphPerformance.test_relationship_creation_performance _\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_neo4j_knowledge_graph.py\u001b[0m:409: in knowledge_graph_service\n    \u001b[0m\u001b[94mwith\u001b[39;49;00m patch(\u001b[33m'\u001b[39;49;00m\u001b[33mneo4j.GraphDatabase.driver\u001b[39;49;00m\u001b[33m'\u001b[39;49;00m) \u001b[94mas\u001b[39;49;00m mock_driver:\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\unittest\\mock.py\u001b[0m:1430: in __enter__\n    \u001b[0m\u001b[96mself\u001b[39;49;00m.target = \u001b[96mself\u001b[39;49;00m.getter()\u001b[90m\u001b[39;49;00m\n                  ^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\pkgutil.py\u001b[0m:715: in resolve_name\n    \u001b[0mresult = \u001b[96mgetattr\u001b[39;49;00m(result, p)\u001b[90m\u001b[39;49;00m\n             ^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AttributeError: module 'neo4j' has no attribute 'GraphDatabase'\u001b[0m\n\u001b[31m\u001b[1m___ ERROR at setup of TestKnowledgeGraphPerformance.test_query_performance ____\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_neo4j_knowledge_graph.py\u001b[0m:409: in knowledge_graph_service\n    \u001b[0m\u001b[94mwith\u001b[39;49;00m patch(\u001b[33m'\u001b[39;49;00m\u001b[33mneo4j.GraphDatabase.driver\u001b[39;49;00m\u001b[33m'\u001b[39;49;00m) \u001b[94mas\u001b[39;49;00m mock_driver:\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\unittest\\mock.py\u001b[0m:1430: in __enter__\n    \u001b[0m\u001b[96mself\u001b[39;49;00m.target = \u001b[96mself\u001b[39;49;00m.getter()\u001b[90m\u001b[39;49;00m\n                  ^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\pkgutil.py\u001b[0m:715: in resolve_name\n    \u001b[0mresult = \u001b[96mgetattr\u001b[39;49;00m(result, p)\u001b[90m\u001b[39;49;00m\n             ^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AttributeError: module 'neo4j' has no attribute 'GraphDatabase'\u001b[0m\n================================== FAILURES ===================================\n\u001b[31m\u001b[1m______________ TestVectorDatabaseService.test_create_collection _______________\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_chromadb_vector_database.py\u001b[0m:167: in test_create_collection\n    \u001b[0m\u001b[94massert\u001b[39;49;00m args[\u001b[94m0\u001b[39;49;00m] == collection_name\u001b[90m\u001b[39;49;00m\n           ^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   IndexError: tuple index out of range\u001b[0m\n----------------------------- Captured log setup ------------------------------\n\u001b[33mWARNING \u001b[0m core.services.vector_database:vector_database.py:142 ChromaDB not available, using mock implementation\n\u001b[31m\u001b[1m__ TestSDKWorkflowIntegration.test_unspsc_node_in_workflow_execution_pattern __\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_classification_nodes_sdk_compliance.py\u001b[0m:327: in test_unspsc_node_in_workflow_execution_pattern\n    \u001b[0m\u001b[94massert\u001b[39;49;00m node_config.get(\u001b[33m'\u001b[39;49;00m\u001b[33mnode_type\u001b[39;49;00m\u001b[33m'\u001b[39;49;00m) == \u001b[33m'\u001b[39;49;00m\u001b[33mUNSPSCClassificationNode\u001b[39;49;00m\u001b[33m'\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mNode type should be string\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n           ^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\pydantic\\main.py\u001b[0m:991: in __getattr__\n    \u001b[0m\u001b[94mraise\u001b[39;49;00m \u001b[96mAttributeError\u001b[39;49;00m(\u001b[33mf\u001b[39;49;00m\u001b[33m'\u001b[39;49;00m\u001b[33m{\u001b[39;49;00m\u001b[96mtype\u001b[39;49;00m(\u001b[96mself\u001b[39;49;00m).\u001b[91m__name__\u001b[39;49;00m\u001b[33m!r}\u001b[39;49;00m\u001b[33m object has no attribute \u001b[39;49;00m\u001b[33m{\u001b[39;49;00mitem\u001b[33m!r}\u001b[39;49;00m\u001b[33m'\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AttributeError: 'NodeInstance' object has no attribute 'get'\u001b[0m\n\u001b[31m\u001b[1m_ TestParameterValidationWithNodeParameters.test_required_parameter_validation_works _\u001b[0m\n\u001b[1m\u001b[31mnodes\\classification_nodes.py\u001b[0m:324: in run\n    \u001b[0mproduct_data = inputs[\u001b[33m\"\u001b[39;49;00m\u001b[33mproduct_data\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m]\u001b[90m\u001b[39;49;00m\n                   ^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   KeyError: 'product_data'\u001b[0m\n\n\u001b[33mDuring handling of the above exception, another exception occurred:\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_classification_nodes_sdk_compliance.py\u001b[0m:419: in test_required_parameter_validation_works\n    \u001b[0mresult = node.run(incomplete_inputs)\u001b[90m\u001b[39;49;00m\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mnodes\\classification_nodes.py\u001b[0m:392: in run\n    \u001b[0m\u001b[33m\"\u001b[39;49;00m\u001b[33mlanguage\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m: language,\u001b[90m\u001b[39;49;00m\n                ^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   UnboundLocalError: cannot access local variable 'language' where it is not associated with a value\u001b[0m\n\u001b[31m\u001b[1m______ TestHybridRecommendationPipeline.test_component_failure_handling _______\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_hybrid_recommendation_pipeline.py\u001b[0m:112: in test_component_failure_handling\n    \u001b[0m\u001b[94massert\u001b[39;49;00m status[\u001b[33m\"\u001b[39;49;00m\u001b[33moverall_healthy\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m] \u001b[95mis\u001b[39;49;00m \u001b[94mFalse\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   assert True is False\u001b[0m\n\u001b[31m\u001b[1m______ TestHybridRecommendationPipeline.test_invalid_request_validation _______\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_hybrid_recommendation_pipeline.py\u001b[0m:138: in test_invalid_request_validation\n    \u001b[0minvalid_request = HybridRecommendationRequest(\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31m<string>\u001b[0m:12: in __init__\n    \u001b[0m\u001b[04m\u001b[91m?\u001b[39;49;00m\u001b[04m\u001b[91m?\u001b[39;49;00m\u001b[04m\u001b[91m?\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mcore\\models\\hybrid_recommendations.py\u001b[0m:30: in __post_init__\n    \u001b[0m\u001b[94mraise\u001b[39;49;00m \u001b[96mValueError\u001b[39;49;00m(\u001b[33m\"\u001b[39;49;00m\u001b[33mUser query cannot be empty\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   ValueError: User query cannot be empty\u001b[0m\n\u001b[31m\u001b[1m________ TestRecommendationEngine.test_safety_requirements_integration ________\u001b[0m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\unittest\\mock.py\u001b[0m:918: in assert_called_once\n    \u001b[0m\u001b[94mraise\u001b[39;49;00m \u001b[96mAssertionError\u001b[39;49;00m(msg)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AssertionError: Expected 'assess_safety_requirements' to have been called once. Called 0 times.\u001b[0m\n\n\u001b[33mDuring handling of the above exception, another exception occurred:\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_hybrid_recommendation_pipeline.py\u001b[0m:306: in test_safety_requirements_integration\n    \u001b[0mmock_openai.assess_safety_requirements.assert_called_once()\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AssertionError: Expected 'assess_safety_requirements' to have been called once. Called 0 times.\u001b[0m\n------------------------------ Captured log call ------------------------------\n\u001b[1m\u001b[31mERROR   \u001b[0m core.services.hybrid_recommendation_pipeline:hybrid_recommendation_pipeline.py:167 Safety recommendations failed: Must specify at least one tool\n\u001b[31m\u001b[1m_________________ TestResultMerger.test_result_deduplication __________________\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_hybrid_recommendation_pipeline.py\u001b[0m:401: in test_result_deduplication\n    \u001b[0mdeduplicated = result_merger.deduplicate_results(results)\u001b[90m\u001b[39;49;00m\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mcore\\services\\hybrid_recommendation_pipeline.py\u001b[0m:277: in deduplicate_results\n    \u001b[0mexisting[\u001b[33m\"\u001b[39;49;00m\u001b[33mreasoning\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m] = result.get(\u001b[33m\"\u001b[39;49;00m\u001b[33mreasoning\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, existing[\u001b[33m\"\u001b[39;49;00m\u001b[33mreasoning\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m])\u001b[90m\u001b[39;49;00m\n                                                    ^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   KeyError: 'reasoning'\u001b[0m\n\u001b[31m\u001b[1m___ TestHybridRecommendationWorkflow.test_complete_recommendation_workflow ____\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_hybrid_recommendation_pipeline.py\u001b[0m:607: in test_complete_recommendation_workflow\n    \u001b[0m\u001b[94massert\u001b[39;49;00m \u001b[33m\"\u001b[39;49;00m\u001b[33mname\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m \u001b[95min\u001b[39;49;00m recommendation\u001b[90m\u001b[39;49;00m\n           ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   TypeError: argument of type 'RecommendationResult' is not iterable\u001b[0m\n\u001b[31m\u001b[1m__________ TestHybridRecommendationWorkflow.test_fallback_mechanism ___________\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_hybrid_recommendation_pipeline.py\u001b[0m:657: in test_fallback_mechanism\n    \u001b[0m\u001b[94massert\u001b[39;49;00m \u001b[33m\"\u001b[39;49;00m\u001b[33mknowledge_graph\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m \u001b[95mnot\u001b[39;49;00m \u001b[95min\u001b[39;49;00m [score.component \u001b[94mfor\u001b[39;49;00m score \u001b[95min\u001b[39;49;00m response.component_scores]\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AssertionError: assert 'knowledge_graph' not in ['knowledge_graph', 'vector_database', 'openai']\u001b[0m\n------------------------------ Captured log call ------------------------------\n\u001b[1m\u001b[31mERROR   \u001b[0m core.services.hybrid_recommendation_pipeline:hybrid_recommendation_pipeline.py:73 Knowledge graph recommendations failed: Neo4j connection failed\n\u001b[31m\u001b[1m_______________ TestKnowledgeGraphService.test_create_tool_node _______________\u001b[0m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\unittest\\mock.py\u001b[0m:918: in assert_called_once\n    \u001b[0m\u001b[94mraise\u001b[39;49;00m \u001b[96mAssertionError\u001b[39;49;00m(msg)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AssertionError: Expected 'run' to have been called once. Called 0 times.\u001b[0m\n\n\u001b[33mDuring handling of the above exception, another exception occurred:\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_neo4j_knowledge_graph.py\u001b[0m:155: in test_create_tool_node\n    \u001b[0mmock_session.run.assert_called_once()\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AssertionError: Expected 'run' to have been called once. Called 0 times.\u001b[0m\n----------------------------- Captured log setup ------------------------------\n\u001b[33mWARNING \u001b[0m core.services.knowledge_graph:knowledge_graph.py:149 Neo4j driver not available, using mock implementation\n\u001b[31m\u001b[1m_______________ TestKnowledgeGraphService.test_create_task_node _______________\u001b[0m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\unittest\\mock.py\u001b[0m:918: in assert_called_once\n    \u001b[0m\u001b[94mraise\u001b[39;49;00m \u001b[96mAssertionError\u001b[39;49;00m(msg)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AssertionError: Expected 'run' to have been called once. Called 0 times.\u001b[0m\n\n\u001b[33mDuring handling of the above exception, another exception occurred:\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_neo4j_knowledge_graph.py\u001b[0m:183: in test_create_task_node\n    \u001b[0mmock_session.run.assert_called_once()\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AssertionError: Expected 'run' to have been called once. Called 0 times.\u001b[0m\n----------------------------- Captured log setup ------------------------------\n\u001b[33mWARNING \u001b[0m core.services.knowledge_graph:knowledge_graph.py:149 Neo4j driver not available, using mock implementation\n\u001b[31m\u001b[1m___________ TestKnowledgeGraphService.test_create_safety_rule_node ____________\u001b[0m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\unittest\\mock.py\u001b[0m:918: in assert_called_once\n    \u001b[0m\u001b[94mraise\u001b[39;49;00m \u001b[96mAssertionError\u001b[39;49;00m(msg)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AssertionError: Expected 'run' to have been called once. Called 0 times.\u001b[0m\n\n\u001b[33mDuring handling of the above exception, another exception occurred:\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_neo4j_knowledge_graph.py\u001b[0m:211: in test_create_safety_rule_node\n    \u001b[0mmock_session.run.assert_called_once()\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AssertionError: Expected 'run' to have been called once. Called 0 times.\u001b[0m\n----------------------------- Captured log setup ------------------------------\n\u001b[33mWARNING \u001b[0m core.services.knowledge_graph:knowledge_graph.py:149 Neo4j driver not available, using mock implementation\n\u001b[31m\u001b[1m_________ TestKnowledgeGraphService.test_create_used_for_relationship _________\u001b[0m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\unittest\\mock.py\u001b[0m:918: in assert_called_once\n    \u001b[0m\u001b[94mraise\u001b[39;49;00m \u001b[96mAssertionError\u001b[39;49;00m(msg)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AssertionError: Expected 'run' to have been called once. Called 0 times.\u001b[0m\n\n\u001b[33mDuring handling of the above exception, another exception occurred:\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_neo4j_knowledge_graph.py\u001b[0m:235: in test_create_used_for_relationship\n    \u001b[0mmock_session.run.assert_called_once()\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AssertionError: Expected 'run' to have been called once. Called 0 times.\u001b[0m\n----------------------------- Captured log setup ------------------------------\n\u001b[33mWARNING \u001b[0m core.services.knowledge_graph:knowledge_graph.py:149 Neo4j driver not available, using mock implementation\n\u001b[31m\u001b[1m_____ TestKnowledgeGraphService.test_create_requires_safety_relationship ______\u001b[0m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\unittest\\mock.py\u001b[0m:918: in assert_called_once\n    \u001b[0m\u001b[94mraise\u001b[39;49;00m \u001b[96mAssertionError\u001b[39;49;00m(msg)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AssertionError: Expected 'run' to have been called once. Called 0 times.\u001b[0m\n\n\u001b[33mDuring handling of the above exception, another exception occurred:\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_neo4j_knowledge_graph.py\u001b[0m:260: in test_create_requires_safety_relationship\n    \u001b[0mmock_session.run.assert_called_once()\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AssertionError: Expected 'run' to have been called once. Called 0 times.\u001b[0m\n----------------------------- Captured log setup ------------------------------\n\u001b[33mWARNING \u001b[0m core.services.knowledge_graph:knowledge_graph.py:149 Neo4j driver not available, using mock implementation\n\u001b[31m\u001b[1m_____________ TestKnowledgeGraphService.test_find_tools_for_task ______________\u001b[0m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\unittest\\mock.py\u001b[0m:918: in assert_called_once\n    \u001b[0m\u001b[94mraise\u001b[39;49;00m \u001b[96mAssertionError\u001b[39;49;00m(msg)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AssertionError: Expected 'run' to have been called once. Called 0 times.\u001b[0m\n\n\u001b[33mDuring handling of the above exception, another exception occurred:\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_neo4j_knowledge_graph.py\u001b[0m:288: in test_find_tools_for_task\n    \u001b[0mmock_session.run.assert_called_once()\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AssertionError: Expected 'run' to have been called once. Called 0 times.\u001b[0m\n----------------------------- Captured log setup ------------------------------\n\u001b[33mWARNING \u001b[0m core.services.knowledge_graph:knowledge_graph.py:149 Neo4j driver not available, using mock implementation\n\u001b[31m\u001b[1m______ TestKnowledgeGraphService.test_find_safety_requirements_for_tool _______\u001b[0m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\unittest\\mock.py\u001b[0m:918: in assert_called_once\n    \u001b[0m\u001b[94mraise\u001b[39;49;00m \u001b[96mAssertionError\u001b[39;49;00m(msg)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AssertionError: Expected 'run' to have been called once. Called 0 times.\u001b[0m\n\n\u001b[33mDuring handling of the above exception, another exception occurred:\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_neo4j_knowledge_graph.py\u001b[0m:316: in test_find_safety_requirements_for_tool\n    \u001b[0mmock_session.run.assert_called_once()\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AssertionError: Expected 'run' to have been called once. Called 0 times.\u001b[0m\n----------------------------- Captured log setup ------------------------------\n\u001b[33mWARNING \u001b[0m core.services.knowledge_graph:knowledge_graph.py:149 Neo4j driver not available, using mock implementation\n\u001b[31m\u001b[1m_____________ TestKnowledgeGraphService.test_get_compatible_tools _____________\u001b[0m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\unittest\\mock.py\u001b[0m:918: in assert_called_once\n    \u001b[0m\u001b[94mraise\u001b[39;49;00m \u001b[96mAssertionError\u001b[39;49;00m(msg)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AssertionError: Expected 'run' to have been called once. Called 0 times.\u001b[0m\n\n\u001b[33mDuring handling of the above exception, another exception occurred:\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_neo4j_knowledge_graph.py\u001b[0m:344: in test_get_compatible_tools\n    \u001b[0mmock_session.run.assert_called_once()\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AssertionError: Expected 'run' to have been called once. Called 0 times.\u001b[0m\n----------------------------- Captured log setup ------------------------------\n\u001b[33mWARNING \u001b[0m core.services.knowledge_graph:knowledge_graph.py:149 Neo4j driver not available, using mock implementation\n\u001b[31m\u001b[1m_____ TestKnowledgeGraphService.test_error_handling_cypher_query_failure ______\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_neo4j_knowledge_graph.py\u001b[0m:397: in test_error_handling_cypher_query_failure\n    \u001b[0m\u001b[94mwith\u001b[39;49;00m pytest.raises(\u001b[96mException\u001b[39;49;00m) \u001b[94mas\u001b[39;49;00m exc_info:\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   Failed: DID NOT RAISE <class 'Exception'>\u001b[0m\n----------------------------- Captured log setup ------------------------------\n\u001b[33mWARNING \u001b[0m core.services.knowledge_graph:knowledge_graph.py:149 Neo4j driver not available, using mock implementation\n\u001b[31m\u001b[1m____________ TestPromptTemplates.test_tool_recommendation_template ____________\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_openai_integration.py\u001b[0m:71: in test_tool_recommendation_template\n    \u001b[0m\u001b[94massert\u001b[39;49;00m \u001b[33m\"\u001b[39;49;00m\u001b[33mcut wood planks\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m \u001b[95min\u001b[39;49;00m prompt\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   assert 'cut wood planks' in '\\nYou are an expert DIY and tool recommendation assistant. Based on the following requirements, provide tool recommendations.\\n\\nTask: Cut wood planks for deck construction\\nUser Skill Level: intermediate\\nBudget: $500\\nWorkspace: garage\\nProject Type: deck_building\\nPreferred Brands: []\\nExisting Tools: []\\n\\nProvide recommendations in JSON format with the following structure:\\n{\\n    \"recommendations\": [\"tool1\", \"tool2\", \"tool3\"],\\n    \"reasoning\": \"Detailed explanation of why these tools are recommended\",\\n    \"confidence_score\": 0.85,\\n    \"safety_notes\": [\"safety note 1\", \"safety note 2\"],\\n    \"estimated_cost\": 250.00,\\n    \"alternative_options\": [\"alternative1\", \"alternative2\"]\\n}\\n\\nConsider safety, efficiency, budget constraints, and user skill level in your recommendations.\\n'\u001b[0m\n\u001b[31m\u001b[1m_____________ TestPromptTemplates.test_project_analysis_template ______________\u001b[0m\n\u001b[1m\u001b[31mcore\\services\\openai_integration.py\u001b[0m:243: in generate_prompt\n    \u001b[0mformatted_prompt = template.format(**data)\u001b[90m\u001b[39;49;00m\n                       ^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   KeyError: 'user_skill_level'\u001b[0m\n\n\u001b[33mDuring handling of the above exception, another exception occurred:\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_openai_integration.py\u001b[0m:105: in test_project_analysis_template\n    \u001b[0mprompt = templates.generate_prompt(\u001b[33m\"\u001b[39;49;00m\u001b[33mproject_analysis\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m, request_data)\u001b[90m\u001b[39;49;00m\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mcore\\services\\openai_integration.py\u001b[0m:247: in generate_prompt\n    \u001b[0m\u001b[94mraise\u001b[39;49;00m \u001b[96mValueError\u001b[39;49;00m(\u001b[33mf\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[33mMissing required template variable: \u001b[39;49;00m\u001b[33m{\u001b[39;49;00me\u001b[33m}\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   ValueError: Missing required template variable: 'user_skill_level'\u001b[0m\n\u001b[31m\u001b[1m___________ TestPromptTemplates.test_requirement_analysis_template ____________\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_openai_integration.py\u001b[0m:125: in test_requirement_analysis_template\n    \u001b[0m\u001b[94massert\u001b[39;49;00m \u001b[33m\"\u001b[39;49;00m\u001b[33mrequirement analysis\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m \u001b[95min\u001b[39;49;00m prompt.lower()\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   assert 'requirement analysis' in '\\nyou are an expert at understanding and analyzing diy project requirements from natural language descriptions.\\n\\nuser query: i need to build shelves in my closet\\nspace dimensions: 6ft x 3ft x 8ft\\nload requirements: books and storage boxes\\nskill level: beginner\\n\\nextract and analyze the requirements in json format:\\n{\\n    \"intent\": \"requirement_analysis\",\\n    \"extracted_requirements\": {\\n        \"primary_task\": \"build shelves\",\\n        \"space_constraints\": \"6ft x 3ft x 8ft\",\\n        \"load_capacity\": \"books and storage boxes\",\\n        \"material_preferences\": []\\n    },\\n    \"clarifying_questions\": [\"what material preference?\", \"any weight limits?\"],\\n    \"confidence\": 0.9\\n}\\n\\nfocus on extracting specific, actionable requirements from the user\\'s description.\\n'\u001b[0m\n\u001b[1m\u001b[31mE    +  where '\\nyou are an expert at understanding and analyzing diy project requirements from natural language descriptions.\\n\\nuser query: i need to build shelves in my closet\\nspace dimensions: 6ft x 3ft x 8ft\\nload requirements: books and storage boxes\\nskill level: beginner\\n\\nextract and analyze the requirements in json format:\\n{\\n    \"intent\": \"requirement_analysis\",\\n    \"extracted_requirements\": {\\n        \"primary_task\": \"build shelves\",\\n        \"space_constraints\": \"6ft x 3ft x 8ft\",\\n        \"load_capacity\": \"books and storage boxes\",\\n        \"material_preferences\": []\\n    },\\n    \"clarifying_questions\": [\"what material preference?\", \"any weight limits?\"],\\n    \"confidence\": 0.9\\n}\\n\\nfocus on extracting specific, actionable requirements from the user\\'s description.\\n' = <built-in method lower of str object at 0x00000254F76AC180>()\u001b[0m\n\u001b[1m\u001b[31mE    +    where <built-in method lower of str object at 0x00000254F76AC180> = '\\nYou are an expert at understanding and analyzing DIY project requirements from natural language descriptions.\\n\\nUser Query: I need to build shelves in my closet\\nSpace Dimensions: 6ft x 3ft x 8ft\\nLoad Requirements: books and storage boxes\\nSkill Level: beginner\\n\\nExtract and analyze the requirements in JSON format:\\n{\\n    \"intent\": \"requirement_analysis\",\\n    \"extracted_requirements\": {\\n        \"primary_task\": \"build shelves\",\\n        \"space_constraints\": \"6ft x 3ft x 8ft\",\\n        \"load_capacity\": \"books and storage boxes\",\\n        \"material_preferences\": []\\n    },\\n    \"clarifying_questions\": [\"What material preference?\", \"Any weight limits?\"],\\n    \"confidence\": 0.9\\n}\\n\\nFocus on extracting specific, actionable requirements from the user\\'s description.\\n'.lower\u001b[0m\n\u001b[31m\u001b[1m______ TestOpenAIIntegrationService.test_response_validation_and_parsing ______\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_openai_integration.py\u001b[0m:405: in test_response_validation_and_parsing\n    \u001b[0mresponse = service.get_tool_recommendations(request)\u001b[90m\u001b[39;49;00m\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mcore\\services\\openai_integration.py\u001b[0m:339: in get_tool_recommendations\n    \u001b[0m\u001b[94mraise\u001b[39;49;00m \u001b[96mValueError\u001b[39;49;00m(\u001b[33mf\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[33mOpenAI response missing required field: \u001b[39;49;00m\u001b[33m{\u001b[39;49;00mfield\u001b[33m}\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   ValueError: OpenAI response missing required field: safety_notes\u001b[0m\n\u001b[31m\u001b[1m_______ TestOpenAIIntegrationService.test_rate_limiting_and_retry_logic _______\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_openai_integration.py\u001b[0m:473: in test_rate_limiting_and_retry_logic\n    \u001b[0mresponse = service.get_tool_recommendations_with_retry(request, max_retries=\u001b[94m2\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mcore\\services\\openai_integration.py\u001b[0m:424: in get_tool_recommendations_with_retry\n    \u001b[0m\u001b[94mreturn\u001b[39;49;00m \u001b[96mself\u001b[39;49;00m.get_tool_recommendations(request)\u001b[90m\u001b[39;49;00m\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mcore\\services\\openai_integration.py\u001b[0m:339: in get_tool_recommendations\n    \u001b[0m\u001b[94mraise\u001b[39;49;00m \u001b[96mValueError\u001b[39;49;00m(\u001b[33mf\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[33mOpenAI response missing required field: \u001b[39;49;00m\u001b[33m{\u001b[39;49;00mfield\u001b[33m}\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   ValueError: OpenAI response missing required field: safety_notes\u001b[0m\n------------------------------ Captured log call ------------------------------\n\u001b[1m\u001b[31mERROR   \u001b[0m core.services.openai_integration:openai_integration.py:324 OpenAI API request failed: Rate limit exceeded\n\u001b[33mWARNING \u001b[0m core.services.openai_integration:openai_integration.py:429 Rate limit hit, retrying in 2s (attempt 1/2)\n\u001b[31m\u001b[1m____________ TestOpenAIIntegrationService.test_prompt_optimization ____________\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_openai_integration.py\u001b[0m:521: in test_prompt_optimization\n    \u001b[0m\u001b[94massert\u001b[39;49;00m \u001b[96mlen\u001b[39;49;00m(prompt_content) < \u001b[94m4000\u001b[39;49;00m  \u001b[90m# Should be truncated\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   assert 5724 < 4000\u001b[0m\n\u001b[1m\u001b[31mE    +  where 5724 = len('\\nYou are an expert DIY and tool recommendation assistant. Based on the following requirements, provide tool recommendations.\\n\\nTasknUser Skill Level: beginner\\nBudget: $100\\nWorkspace: garage\\nProject Type: test\\nPreferred Brands: []\\nExisting Tools: []\\n\\nProvide recommendations in JSON format with the following structure:\\n{\\n    \"recommendations\": [\"tool1\", \"tool2\", \"tool3\"],\\n    \"reasoning\": \"Detailed explanation of why these tools are recommended\",\\n    \"confidence_score\": 0.85,\\n    \"safety_notes\": [\"safety note 1\", \"safety note 2\"],\\n    \"estimated_cost\": 250.00,\\n    \"alternative_options\": [\"alternative1\", \"alternative2\"]\\n}\\n\\nConsider safety, efficiency, budget constraints, and user skill level in your recommendations.\\n')\u001b[0m\n\u001b[31m\u001b[1m____ TestOpenAIIntegrationPerformance.test_tool_recommendation_performance ____\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_openai_integration.py\u001b[0m:563: in test_tool_recommendation_performance\n    \u001b[0mresponse = service.get_tool_recommendations(request)\u001b[90m\u001b[39;49;00m\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mcore\\services\\openai_integration.py\u001b[0m:339: in get_tool_recommendations\n    \u001b[0m\u001b[94mraise\u001b[39;49;00m \u001b[96mValueError\u001b[39;49;00m(\u001b[33mf\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[33mOpenAI response missing required field: \u001b[39;49;00m\u001b[33m{\u001b[39;49;00mfield\u001b[33m}\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m)\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   ValueError: OpenAI response missing required field: safety_notes\u001b[0m\n\u001b[31m\u001b[1m_ TestRegisterNodeDecorator.test_register_node_supports_standard_sdk_patterns _\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_sdk_compliance_foundation.py\u001b[0m:132: in test_register_node_supports_standard_sdk_patterns\n    \u001b[0m\u001b[37m@register_node\u001b[39;49;00m(**pattern)\u001b[90m\u001b[39;49;00m\n     ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   TypeError: register_node() got an unexpected keyword argument 'tags'\u001b[0m\n------------------------------ Captured log call ------------------------------\n\u001b[33mWARNING \u001b[0m root:base.py:2030 Overwriting existing node registration for 'TestNode'\n\u001b[31m\u001b[1m___ TestNodeExecutionPatterns.test_node_implements_run_as_primary_interface ___\u001b[0m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\kailash\\nodes\\base.py\u001b[0m:291: in __init__\n    \u001b[0m\u001b[96mself\u001b[39;49;00m._validate_config()\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\kailash\\nodes\\base.py\u001b[0m:547: in _validate_config\n    \u001b[0m\u001b[94mif\u001b[39;49;00m param_def.required \u001b[95mand\u001b[39;49;00m param_def.default \u001b[95mis\u001b[39;49;00m \u001b[94mNone\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n       ^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AttributeError: 'dict' object has no attribute 'required'\u001b[0m\n\n\u001b[33mThe above exception was the direct cause of the following exception:\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_sdk_compliance_foundation.py\u001b[0m:301: in test_node_implements_run_as_primary_interface\n    \u001b[0mnode = TestNode()\u001b[90m\u001b[39;49;00m\n           ^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\kailash\\nodes\\base.py\u001b[0m:295: in __init__\n    \u001b[0m\u001b[94mraise\u001b[39;49;00m NodeConfigurationError(\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   kailash.sdk_exceptions.NodeConfigurationError: Failed to initialize node 'TestNode': 'dict' object has no attribute 'required'\u001b[0m\n------------------------------ Captured log call ------------------------------\n\u001b[33mWARNING \u001b[0m root:base.py:2030 Overwriting existing node registration for 'TestNode'\n\u001b[31m\u001b[1m_ TestNodeExecutionPatterns.test_workflow_build_method_called_before_execution _\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_sdk_compliance_foundation.py\u001b[0m:338: in get_parameters\n    \u001b[0m\u001b[94mreturn\u001b[39;49;00m {\u001b[33m\"\u001b[39;49;00m\u001b[33mtest_param\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m: NodeParameter(\u001b[96mtype\u001b[39;49;00m=\u001b[96mstr\u001b[39;49;00m, required=\u001b[94mFalse\u001b[39;49;00m)}\u001b[90m\u001b[39;49;00m\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   pydantic_core._pydantic_core.ValidationError: 1 validation error for NodeParameter\u001b[0m\n\u001b[1m\u001b[31mE   name\u001b[0m\n\u001b[1m\u001b[31mE     Field required [type=missing, input_value={'type': <class 'str'>, 'required': False}, input_type=dict]\u001b[0m\n\u001b[1m\u001b[31mE       For further information visit https://errors.pydantic.dev/2.11/v/missing\u001b[0m\n\n\u001b[33mThe above exception was the direct cause of the following exception:\u001b[0m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\kailash\\nodes\\base.py\u001b[0m:291: in __init__\n    \u001b[0m\u001b[96mself\u001b[39;49;00m._validate_config()\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\kailash\\nodes\\base.py\u001b[0m:543: in _validate_config\n    \u001b[0m\u001b[94mraise\u001b[39;49;00m NodeConfigurationError(\u001b[33mf\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[33mFailed to get node parameters: \u001b[39;49;00m\u001b[33m{\u001b[39;49;00me\u001b[33m}\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m) \u001b[94mfrom\u001b[39;49;00m\u001b[90m \u001b[39;49;00m\u001b[04m\u001b[96me\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   kailash.sdk_exceptions.NodeConfigurationError: Failed to get node parameters: 1 validation error for NodeParameter\u001b[0m\n\u001b[1m\u001b[31mE   name\u001b[0m\n\u001b[1m\u001b[31mE     Field required [type=missing, input_value={'type': <class 'str'>, 'required': False}, input_type=dict]\u001b[0m\n\u001b[1m\u001b[31mE       For further information visit https://errors.pydantic.dev/2.11/v/missing\u001b[0m\n\n\u001b[33mThe above exception was the direct cause of the following exception:\u001b[0m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\kailash\\workflow\\builder.py\u001b[0m:1055: in build\n    \u001b[0mworkflow.add_node(\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\kailash\\workflow\\graph.py\u001b[0m:220: in add_node\n    \u001b[0mnode_instance = \u001b[96mself\u001b[39;49;00m._create_node_instance(node_class, node_id, config)\u001b[90m\u001b[39;49;00m\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\kailash\\workflow\\graph.py\u001b[0m:169: in _create_node_instance\n    \u001b[0m\u001b[94mreturn\u001b[39;49;00m node_class(\u001b[96mid\u001b[39;49;00m=node_id, **config)\u001b[90m\u001b[39;49;00m\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\kailash\\nodes\\base.py\u001b[0m:295: in __init__\n    \u001b[0m\u001b[94mraise\u001b[39;49;00m NodeConfigurationError(\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   kailash.sdk_exceptions.NodeConfigurationError: Failed to initialize node 'test_query': Failed to get node parameters: 1 validation error for NodeParameter\u001b[0m\n\u001b[1m\u001b[31mE   name\u001b[0m\n\u001b[1m\u001b[31mE     Field required [type=missing, input_value={'type': <class 'str'>, 'required': False}, input_type=dict]\u001b[0m\n\u001b[1m\u001b[31mE       For further information visit https://errors.pydantic.dev/2.11/v/missing\u001b[0m\n\n\u001b[33mThe above exception was the direct cause of the following exception:\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_sdk_compliance_foundation.py\u001b[0m:348: in test_workflow_build_method_called_before_execution\n    \u001b[0mbuilt_workflow = workflow.build()\u001b[90m\u001b[39;49;00m\n                     ^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\kailash\\workflow\\builder.py\u001b[0m:1059: in build\n    \u001b[0m\u001b[94mraise\u001b[39;49;00m WorkflowValidationError(\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   kailash.sdk_exceptions.WorkflowValidationError: Failed to add node 'test_query' to workflow: Failed to initialize node 'test_query': Failed to get node parameters: 1 validation error for NodeParameter\u001b[0m\n\u001b[1m\u001b[31mE   name\u001b[0m\n\u001b[1m\u001b[31mE     Field required [type=missing, input_value={'type': <class 'str'>, 'required': False}, input_type=dict]\u001b[0m\n\u001b[1m\u001b[31mE       For further information visit https://errors.pydantic.dev/2.11/v/missing\u001b[0m\n------------------------------ Captured log call ------------------------------\n\u001b[33mWARNING \u001b[0m root:base.py:2030 Overwriting existing node registration for 'TestNode'\n\u001b[31m\u001b[1m_ TestStringBasedNodeConfigurations.test_workflow_uses_string_node_references _\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_sdk_compliance_foundation.py\u001b[0m:401: in test_workflow_uses_string_node_references\n    \u001b[0mnode_types = [node[\u001b[33m\"\u001b[39;49;00m\u001b[33mnode_type\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m] \u001b[94mfor\u001b[39;49;00m node \u001b[95min\u001b[39;49;00m nodes]\u001b[90m\u001b[39;49;00m\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mtests\\unit\\test_sdk_compliance_foundation.py\u001b[0m:401: in <listcomp>\n    \u001b[0mnode_types = [node[\u001b[33m\"\u001b[39;49;00m\u001b[33mnode_type\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m] \u001b[94mfor\u001b[39;49;00m node \u001b[95min\u001b[39;49;00m nodes]\u001b[90m\u001b[39;49;00m\n                  ^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   TypeError: string indices must be integers, not 'str'\u001b[0m\n\u001b[31m\u001b[1m_ TestStringBasedNodeConfigurations.test_workflow_rejects_object_based_node_instantiation _\u001b[0m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\kailash\\nodes\\base.py\u001b[0m:291: in __init__\n    \u001b[0m\u001b[96mself\u001b[39;49;00m._validate_config()\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\kailash\\nodes\\base.py\u001b[0m:547: in _validate_config\n    \u001b[0m\u001b[94mif\u001b[39;49;00m param_def.required \u001b[95mand\u001b[39;49;00m param_def.default \u001b[95mis\u001b[39;49;00m \u001b[94mNone\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n       ^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AttributeError: 'dict' object has no attribute 'required'\u001b[0m\n\n\u001b[33mThe above exception was the direct cause of the following exception:\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_sdk_compliance_foundation.py\u001b[0m:426: in test_workflow_rejects_object_based_node_instantiation\n    \u001b[0mmock_node_instance = MockNode()\u001b[90m\u001b[39;49;00m\n                         ^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\kailash\\nodes\\base.py\u001b[0m:295: in __init__\n    \u001b[0m\u001b[94mraise\u001b[39;49;00m NodeConfigurationError(\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   kailash.sdk_exceptions.NodeConfigurationError: Failed to initialize node 'MockNode': 'dict' object has no attribute 'required'\u001b[0m\n\u001b[31m\u001b[1m_ TestStringBasedNodeConfigurations.test_workflow_parameter_injection_patterns _\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_sdk_compliance_foundation.py\u001b[0m:441: in test_workflow_parameter_injection_patterns\n    \u001b[0m\u001b[94massert\u001b[39;49;00m demo_result[\u001b[33m\"\u001b[39;49;00m\u001b[33mmethod_1_config\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m] \u001b[95mis\u001b[39;49;00m \u001b[94mTrue\u001b[39;49;00m, \u001b[33m\"\u001b[39;49;00m\u001b[33mDirect configuration parameters not demonstrated\u001b[39;49;00m\u001b[33m\"\u001b[39;49;00m\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AssertionError: Direct configuration parameters not demonstrated\u001b[0m\n\u001b[1m\u001b[31mE   assert False is True\u001b[0m\n\u001b[31m\u001b[1m________ TestComplianceIntegration.test_compliance_violation_detection ________\u001b[0m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\kailash\\nodes\\base.py\u001b[0m:291: in __init__\n    \u001b[0m\u001b[96mself\u001b[39;49;00m._validate_config()\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\kailash\\nodes\\base.py\u001b[0m:547: in _validate_config\n    \u001b[0m\u001b[94mif\u001b[39;49;00m param_def.required \u001b[95mand\u001b[39;49;00m param_def.default \u001b[95mis\u001b[39;49;00m \u001b[94mNone\u001b[39;49;00m:\u001b[90m\u001b[39;49;00m\n       ^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   AttributeError: 'dict' object has no attribute 'required'\u001b[0m\n\n\u001b[33mThe above exception was the direct cause of the following exception:\u001b[0m\n\u001b[1m\u001b[31mtests\\unit\\test_sdk_compliance_foundation.py\u001b[0m:621: in test_compliance_violation_detection\n    \u001b[0mnode2 = NonCompliantNode2()\u001b[90m\u001b[39;49;00m\n            ^^^^^^^^^^^^^^^^^^^\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mC:\\Users\\fujif\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\kailash\\nodes\\base.py\u001b[0m:295: in __init__\n    \u001b[0m\u001b[94mraise\u001b[39;49;00m NodeConfigurationError(\u001b[90m\u001b[39;49;00m\n\u001b[1m\u001b[31mE   kailash.sdk_exceptions.NodeConfigurationError: Failed to initialize node 'NonCompliantNode2': 'dict' object has no attribute 'required'\u001b[0m\n\u001b[36m\u001b[1m=========================== short test summary info ===========================\u001b[0m\n\u001b[31mFAILED\u001b[0m tests/unit/test_chromadb_vector_database.py::\u001b[1mTestVectorDatabaseService::test_create_collection\u001b[0m - IndexError: tuple index out of range\n\u001b[31mFAILED\u001b[0m tests/unit/test_classification_nodes_sdk_compliance.py::\u001b[1mTestSDKWorkflowIntegration::test_unspsc_node_in_workflow_execution_pattern\u001b[0m - AttributeError: 'NodeInstance' object has no attribute 'get'\n\u001b[31mFAILED\u001b[0m tests/unit/test_classification_nodes_sdk_compliance.py::\u001b[1mTestParameterValidationWithNodeParameters::test_required_parameter_validation_works\u001b[0m - UnboundLocalError: cannot access local variable 'language' where it is not ...\n\u001b[31mFAILED\u001b[0m tests/unit/test_hybrid_recommendation_pipeline.py::\u001b[1mTestHybridRecommendationPipeline::test_component_failure_handling\u001b[0m - assert True is False\n\u001b[31mFAILED\u001b[0m tests/unit/test_hybrid_recommendation_pipeline.py::\u001b[1mTestHybridRecommendationPipeline::test_invalid_request_validation\u001b[0m - ValueError: User query cannot be empty\n\u001b[31mFAILED\u001b[0m tests/unit/test_hybrid_recommendation_pipeline.py::\u001b[1mTestRecommendationEngine::test_safety_requirements_integration\u001b[0m - AssertionError: Expected 'assess_safety_requirements' to have been called o...\n\u001b[31mFAILED\u001b[0m tests/unit/test_hybrid_recommendation_pipeline.py::\u001b[1mTestResultMerger::test_result_deduplication\u001b[0m - KeyError: 'reasoning'\n\u001b[31mFAILED\u001b[0m tests/unit/test_hybrid_recommendation_pipeline.py::\u001b[1mTestHybridRecommendationWorkflow::test_complete_recommendation_workflow\u001b[0m - TypeError: argument of type 'RecommendationResult' is not iterable\n\u001b[31mFAILED\u001b[0m tests/unit/test_hybrid_recommendation_pipeline.py::\u001b[1mTestHybridRecommendationWorkflow::test_fallback_mechanism\u001b[0m - AssertionError: assert 'knowledge_graph' not in ['knowledge_graph', 'vector...\n\u001b[31mFAILED\u001b[0m tests/unit/test_neo4j_knowledge_graph.py::\u001b[1mTestKnowledgeGraphService::test_create_tool_node\u001b[0m - AssertionError: Expected 'run' to have been called once. Called 0 times.\n\u001b[31mFAILED\u001b[0m tests/unit/test_neo4j_knowledge_graph.py::\u001b[1mTestKnowledgeGraphService::test_create_task_node\u001b[0m - AssertionError: Expected 'run' to have been called once. Called 0 times.\n\u001b[31mFAILED\u001b[0m tests/unit/test_neo4j_knowledge_graph.py::\u001b[1mTestKnowledgeGraphService::test_create_safety_rule_node\u001b[0m - AssertionError: Expected 'run' to have been called once. Called 0 times.\n\u001b[31mFAILED\u001b[0m tests/unit/test_neo4j_knowledge_graph.py::\u001b[1mTestKnowledgeGraphService::test_create_used_for_relationship\u001b[0m - AssertionError: Expected 'run' to have been called once. Called 0 times.\n\u001b[31mFAILED\u001b[0m tests/unit/test_neo4j_knowledge_graph.py::\u001b[1mTestKnowledgeGraphService::test_create_requires_safety_relationship\u001b[0m - AssertionError: Expected 'run' to have been called once. Called 0 times.\n\u001b[31mFAILED\u001b[0m tests/unit/test_neo4j_knowledge_graph.py::\u001b[1mTestKnowledgeGraphService::test_find_tools_for_task\u001b[0m - AssertionError: Expected 'run' to have been called once. Called 0 times.\n\u001b[31mFAILED\u001b[0m tests/unit/test_neo4j_knowledge_graph.py::\u001b[1mTestKnowledgeGraphService::test_find_safety_requirements_for_tool\u001b[0m - AssertionError: Expected 'run' to have been called once. Called 0 times.\n\u001b[31mFAILED\u001b[0m tests/unit/test_neo4j_knowledge_graph.py::\u001b[1mTestKnowledgeGraphService::test_get_compatible_tools\u001b[0m - AssertionError: Expected 'run' to have been called once. Called 0 times.\n\u001b[31mFAILED\u001b[0m tests/unit/test_neo4j_knowledge_graph.py::\u001b[1mTestKnowledgeGraphService::test_error_handling_cypher_query_failure\u001b[0m - Failed: DID NOT RAISE <class 'Exception'>\n\u001b[31mFAILED\u001b[0m tests/unit/test_openai_integration.py::\u001b[1mTestPromptTemplates::test_tool_recommendation_template\u001b[0m - assert 'cut wood planks' in '\\nYou are an expert DIY and tool recommendatio...\n\u001b[31mFAILED\u001b[0m tests/unit/test_openai_integration.py::\u001b[1mTestPromptTemplates::test_project_analysis_template\u001b[0m - ValueError: Missing required template variable: 'user_skill_level'\n\u001b[31mFAILED\u001b[0m tests/unit/test_openai_integration.py::\u001b[1mTestPromptTemplates::test_requirement_analysis_template\u001b[0m - assert 'requirement analysis' in '\\nyou are an expert at understanding and ...\n\u001b[31mFAILED\u001b[0m tests/unit/test_openai_integration.py::\u001b[1mTestOpenAIIntegrationService::test_response_validation_and_parsing\u001b[0m - ValueError: OpenAI response missing required field: safety_notes\n\u001b[31mFAILED\u001b[0m tests/unit/test_openai_integration.py::\u001b[1mTestOpenAIIntegrationService::test_rate_limiting_and_retry_logic\u001b[0m - ValueError: OpenAI response missing required field: safety_notes\n\u001b[31mFAILED\u001b[0m tests/unit/test_openai_integration.py::\u001b[1mTestOpenAIIntegrationService::test_prompt_optimization\u001b[0m - assert 5724 < 4000\n\u001b[31mFAILED\u001b[0m tests/unit/test_openai_integration.py::\u001b[1mTestOpenAIIntegrationPerformance::test_tool_recommendation_performance\u001b[0m - ValueError: OpenAI response missing required field: safety_notes\n\u001b[31mFAILED\u001b[0m tests/unit/test_sdk_compliance_foundation.py::\u001b[1mTestRegisterNodeDecorator::test_register_node_supports_standard_sdk_patterns\u001b[0m - TypeError: register_node() got an unexpected keyword argument 'tags'\n\u001b[31mFAILED\u001b[0m tests/unit/test_sdk_compliance_foundation.py::\u001b[1mTestNodeExecutionPatterns::test_node_implements_run_as_primary_interface\u001b[0m - kailash.sdk_exceptions.NodeConfigurationError: Failed to initialize node 'T...\n\u001b[31mFAILED\u001b[0m tests/unit/test_sdk_compliance_foundation.py::\u001b[1mTestNodeExecutionPatterns::test_workflow_build_method_called_before_execution\u001b[0m - kailash.sdk_exceptions.WorkflowValidationError: Failed to add node 'test_qu...\n\u001b[31mFAILED\u001b[0m tests/unit/test_sdk_compliance_foundation.py::\u001b[1mTestStringBasedNodeConfigurations::test_workflow_uses_string_node_references\u001b[0m - TypeError: string indices must be integers, not 'str'\n\u001b[31mFAILED\u001b[0m tests/unit/test_sdk_compliance_foundation.py::\u001b[1mTestStringBasedNodeConfigurations::test_workflow_rejects_object_based_node_instantiation\u001b[0m - kailash.sdk_exceptions.NodeConfigurationError: Failed to initialize node 'M...\n\u001b[31mFAILED\u001b[0m tests/unit/test_sdk_compliance_foundation.py::\u001b[1mTestStringBasedNodeConfigurations::test_workflow_parameter_injection_patterns\u001b[0m - AssertionError: Direct configuration parameters not demonstrated\n\u001b[31mFAILED\u001b[0m tests/unit/test_sdk_compliance_foundation.py::\u001b[1mTestComplianceIntegration::test_compliance_violation_detection\u001b[0m - kailash.sdk_exceptions.NodeConfigurationError: Failed to initialize node 'N...\n\u001b[31mERROR\u001b[0m tests/unit/test_neo4j_knowledge_graph.py::\u001b[1mTestKnowledgeGraphPerformance::test_node_creation_performance\u001b[0m - AttributeError: module 'neo4j' has no attribute 'GraphDatabase'\n\u001b[31mERROR\u001b[0m tests/unit/test_neo4j_knowledge_graph.py::\u001b[1mTestKnowledgeGraphPerformance::test_relationship_creation_performance\u001b[0m - AttributeError: module 'neo4j' has no attribute 'GraphDatabase'\n\u001b[31mERROR\u001b[0m tests/unit/test_neo4j_knowledge_graph.py::\u001b[1mTestKnowledgeGraphPerformance::test_query_performance\u001b[0m - AttributeError: module 'neo4j' has no attribute 'GraphDatabase'\n\u001b[31m================== \u001b[31m\u001b[1m32 failed\u001b[0m, \u001b[32m357 passed\u001b[0m, \u001b[31m\u001b[1m3 errors\u001b[0m\u001b[31m in 7.86s\u001b[0m\u001b[31m ===================\u001b[0m\n",
      "errors": "",
      "tests_run": 0,
      "tests_passed": 0,
      "tests_failed": 0,
      "tests_skipped": 0
    }
  },
  "environment_info": {
    "python_version": "3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]",
    "working_directory": "C:\\Users\\fujif\\OneDrive\\Documents\\GitHub\\horme-pov\\src\\new_project",
    "test_directory": "C:\\Users\\fujif\\OneDrive\\Documents\\GitHub\\horme-pov\\src\\new_project"
  }
}