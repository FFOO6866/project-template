# Test Infrastructure Dependencies - Complete Requirements
# Generated from requirements analysis for test infrastructure recovery

# ==============================================================================
# CORE SDK DEPENDENCIES (CRITICAL)
# ==============================================================================
kailash>=0.3.0                    # Main Kailash SDK - pinned for compatibility
# dataflow - Custom DataFlow framework (local installation required)

# ==============================================================================
# ASYNC AND CORE PYTHON DEPENDENCIES
# ==============================================================================
asyncio>=3.4.3                   # Async support for workflows
asyncpg>=0.28.0                  # PostgreSQL async driver
aiofiles>=23.2.1                 # Async file operations
aiohttp>=3.8.0                   # Async HTTP client

# ==============================================================================
# DATABASE DEPENDENCIES (HIGH PRIORITY)
# ==============================================================================
# PostgreSQL drivers and ORM
psycopg2-binary>=2.9.7           # PostgreSQL sync driver (binary for Windows)
sqlalchemy>=2.0.20               # ORM and database toolkit
alembic>=1.12.0                  # Database migrations
sqlalchemy-utils>=0.41.0         # SQLAlchemy utilities

# Connection pooling and async support
asyncpg>=0.28.0                  # Async PostgreSQL driver
databases>=0.8.0                 # Database abstraction layer

# ==============================================================================
# AI/ML DEPENDENCIES (HIGH PRIORITY)
# ==============================================================================
# OpenAI and language models
openai>=1.3.0                    # OpenAI API client
tiktoken>=0.5.0                  # OpenAI tokenizer

# Vector databases and embeddings
chromadb>=0.4.15                 # Vector database client
sentence-transformers>=2.2.2     # Text embeddings
numpy>=1.24.0                    # Numerical computing
pandas>=2.0.0                    # Data manipulation

# Additional ML libraries
scikit-learn>=1.3.0              # Machine learning utilities
transformers>=4.33.0             # Hugging Face transformers

# ==============================================================================
# GRAPH DATABASE DEPENDENCIES (MEDIUM PRIORITY)
# ==============================================================================
neo4j>=5.13.0                    # Neo4j Python driver
py2neo>=2021.2.4                 # Neo4j high-level interface

# ==============================================================================
# TESTING FRAMEWORK DEPENDENCIES (CRITICAL)
# ==============================================================================
# Core testing framework
pytest>=7.4.0                    # Main testing framework
pytest-asyncio>=0.21.1           # Async test support
pytest-cov>=4.1.0                # Coverage reporting
pytest-html>=3.2.0               # HTML test reports
pytest-json-report>=1.5.0        # JSON test reports

# Test execution and performance
pytest-timeout>=2.1.0            # Test timeouts
pytest-xdist>=3.3.1              # Parallel test execution
pytest-benchmark>=4.0.0          # Performance benchmarking
pytest-mock>=3.11.1              # Mocking support

# Test data and fixtures
pytest-factoryboy>=2.5.1         # Test data factories
pytest-faker>=2.0.0              # Fake data generation
pytest-freezegun>=0.4.2          # Time mocking

# ==============================================================================
# DEVELOPMENT AND DEBUGGING DEPENDENCIES
# ==============================================================================
# Code quality and formatting
black>=23.7.0                    # Code formatting
isort>=5.12.0                    # Import sorting
flake8>=6.0.0                    # Linting
mypy>=1.5.0                      # Type checking

# Debugging and development
ipython>=8.15.0                  # Enhanced Python shell
ipdb>=0.13.13                    # IPython debugger
rich>=13.5.0                     # Rich terminal output
click>=8.1.0                     # CLI framework

# ==============================================================================
# DOCKER AND CONTAINER DEPENDENCIES
# ==============================================================================
docker>=6.1.0                    # Docker Python client
docker-compose>=1.29.0           # Docker Compose (if using Python API)

# ==============================================================================
# HTTP AND API DEPENDENCIES
# ==============================================================================
requests>=2.31.0                 # HTTP requests
httpx>=0.24.0                    # Modern HTTP client
fastapi>=0.103.0                 # API framework (for test servers)
uvicorn>=0.23.0                  # ASGI server
pydantic>=2.3.0                  # Data validation

# ==============================================================================
# CONFIGURATION AND ENVIRONMENT
# ==============================================================================
python-dotenv>=1.0.0             # Environment variable loading
pyyaml>=6.0.1                    # YAML configuration
toml>=0.10.2                     # TOML configuration
configparser>=5.3.0              # INI configuration

# ==============================================================================
# UTILITIES AND HELPERS
# ==============================================================================
# Data manipulation and utilities
python-dateutil>=2.8.2           # Date utilities
pytz>=2023.3                     # Timezone support
uuid>=1.30                       # UUID generation
hashlib>=1.0.0                   # Hashing utilities

# File and path utilities
pathlib>=1.0.1                   # Path manipulation
tempfile>=1.0.0                  # Temporary files
shutil>=1.0.0                    # File operations

# JSON and data serialization
ujson>=5.8.0                     # Fast JSON parsing
orjson>=3.9.0                    # Fast JSON serialization
msgpack>=1.0.0                   # MessagePack serialization

# ==============================================================================
# MONITORING AND LOGGING
# ==============================================================================
structlog>=23.1.0                # Structured logging
loguru>=0.7.0                    # Enhanced logging
prometheus-client>=0.17.0        # Metrics collection

# ==============================================================================
# SECURITY AND AUTHENTICATION
# ==============================================================================
cryptography>=41.0.0             # Cryptographic utilities
pyjwt>=2.8.0                     # JWT token handling
bcrypt>=4.0.0                    # Password hashing

# ==============================================================================
# WINDOWS COMPATIBILITY
# ==============================================================================
# Windows-specific dependencies
pywin32>=306; sys_platform == "win32"        # Windows API access
wmi>=1.5.1; sys_platform == "win32"          # Windows Management Interface
colorama>=0.4.6                              # Cross-platform colored terminal

# ==============================================================================
# PERFORMANCE AND OPTIMIZATION
# ==============================================================================
ujson>=5.8.0                     # Fast JSON parsing
cython>=3.0.0                    # C extensions for performance
psutil>=5.9.0                    # System and process utilities

# ==============================================================================
# ADDITIONAL TESTING UTILITIES
# ==============================================================================
# Hypothesis for property-based testing
hypothesis>=6.82.0               # Property-based testing
hypothesis[datetime]>=6.82.0     # DateTime strategies

# Network testing utilities
responses>=0.23.0                # HTTP request mocking
httpretty>=1.1.4                 # HTTP request stubbing

# Database testing utilities
pytest-postgresql>=5.0.0         # PostgreSQL testing fixtures
testing.postgresql>=1.3.0        # PostgreSQL test database

# ==============================================================================
# OPTIONAL DEVELOPMENT DEPENDENCIES
# ==============================================================================
# Jupyter and notebook support (optional)
jupyter>=1.0.0                   # Jupyter notebook support
notebook>=7.0.0                  # Jupyter notebook server
ipywidgets>=8.1.0                # Interactive widgets

# Documentation generation (optional)
sphinx>=7.1.0                    # Documentation generator
sphinx-rtd-theme>=1.3.0          # ReadTheDocs theme

# ==============================================================================
# VERSION CONSTRAINTS AND COMPATIBILITY
# ==============================================================================
# Ensure Python version compatibility
python-version>=3.9              # Minimum Python version

# Pin critical versions to avoid conflicts
setuptools>=68.0.0               # Build tools
wheel>=0.41.0                    # Packaging
pip>=23.2.0                      # Package installer

# ==============================================================================
# PLATFORM-SPECIFIC REQUIREMENTS
# ==============================================================================
# Linux-specific packages
psutil>=5.9.0                    # Cross-platform system utilities

# macOS-specific packages (if needed)
# No specific macOS requirements currently

# ==============================================================================
# NOTES AND INSTALLATION INSTRUCTIONS
# ==============================================================================
# Installation commands:
# 1. Create virtual environment: python -m venv test-env
# 2. Activate: test-env\Scripts\activate (Windows) or source test-env/bin/activate (Linux/Mac)
# 3. Upgrade pip: python -m pip install --upgrade pip
# 4. Install requirements: pip install -r requirements-test.txt
# 5. Install local DataFlow: pip install -e ./path/to/dataflow
# 6. Apply Windows patches: python windows_patch.py
# 7. Validate environment: python validate_test_environment.py

# Known issues and workarounds:
# - Kailash SDK may require specific version pinning
# - DataFlow framework requires local installation
# - Windows requires resource module patch
# - PostgreSQL requires running Docker container
# - OpenAI API requires valid API key in environment

# Performance optimizations:
# - Use --no-deps flag for packages with heavy dependencies
# - Consider using conda for scientific packages
# - Use pip cache for faster reinstallation
# - Consider using poetry for better dependency resolution