# Clean Nexus Multi-Channel Platform - Pure Docker Deployment
# No Windows dependencies, Linux-only, production-ready
version: '3.8'

services:
  # Nexus Multi-Channel Platform (Clean)
  nexus:
    build:
      context: .
      dockerfile: Dockerfile.nexus-clean
    container_name: nexus-platform
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # Core Nexus Configuration
      - NEXUS_ENV=production
      - NEXUS_API_PORT=8000
      - NEXUS_MCP_PORT=3001
      - NEXUS_API_HOST=0.0.0.0
      
      # Authentication
      - NEXUS_JWT_SECRET=${NEXUS_JWT_SECRET:-nexus-production-secret-change-in-production}
      - NEXUS_ENABLE_AUTH=true
      
      # Database Configuration
      - DATABASE_URL=postgresql://nexus_user:${POSTGRES_PASSWORD:-nexus_password}@postgres:5432/nexus_db
      - REDIS_URL=redis://redis:6379/0
      
      # Performance Configuration
      - NEXUS_WORKERS=4
      - NEXUS_TIMEOUT=300
      - CACHE_TTL=300
      - MAX_CONNECTIONS=100
      
      # Security Configuration
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,http://localhost:8080}
      - ENABLE_RATE_LIMITING=true
      - RATE_LIMIT_PER_MINUTE=100
      
      # Monitoring Configuration
      - ENABLE_METRICS=true
      - METRICS_PORT=9090
      - LOG_LEVEL=info
      
    ports:
      - "8000:8000"   # Nexus API Server
      - "3001:3001"   # Nexus MCP Server
      - "9090:9090"   # Metrics endpoint
    volumes:
      - nexus_logs:/app/logs
      - nexus_data:/app/data
      - nexus_cache:/app/cache
      - nexus_uploads:/app/uploads
    networks:
      - nexus-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: nexus-postgres
    environment:
      POSTGRES_DB: nexus_db
      POSTGRES_USER: nexus_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-nexus_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - nexus-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nexus_user -d nexus_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: nexus-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - nexus-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      redis-server
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
      --appendonly yes
      --appendfsync everysec
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: nexus-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    networks:
      - nexus-network
    restart: unless-stopped
    depends_on:
      - nexus
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'

  # Prometheus Monitoring (Optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: nexus-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9091:9090"
    networks:
      - nexus-network
    restart: unless-stopped
    depends_on:
      - nexus
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

volumes:
  # Database volumes
  postgres_data:
    driver: local
  redis_data:
    driver: local
  
  # Application volumes
  nexus_logs:
    driver: local
  nexus_data:
    driver: local
  nexus_cache:
    driver: local
  nexus_uploads:
    driver: local
  
  # Infrastructure volumes
  nginx_logs:
    driver: local
  prometheus_data:
    driver: local

networks:
  nexus-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1